version: 0.2

phases:
  install:
    runtime-versions:
      java: corretto8 
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - docker login -u mavensmag -p Welldercare@1
      - aws --version
      - aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 029266897495.dkr.ecr.ap-south-1.amazonaws.com
      #- $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
      - REPOSITORY_URI=029266897495.dkr.ecr.ap-south-1.amazonaws.com/etraze-api
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - java -version
      - mvn clean
      - mvn package -DskipTests=true
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '[{"name":"etraze-api","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - cat imagedefinitions.json
artifacts:
  files: 
    - 'imagedefinitions.json'
    - 'appspec.yaml'
    - 'taskdef.json'
    - 'pom.xml'
  secondary-artifacts:
    DefinitionArtifact:
      files:
        - appspec.yaml
        - taskdef.json
        - imagedefinitions.json
    ImageArtifact:
      files:
        - imageDetail.json