package com.healthtraze.etraze.api.masters.repository;

import java.math.BigInteger;
import java.util.List;
import java.util.Optional;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;

import com.healthtraze.etraze.api.base.repository.BaseRepository;
import com.healthtraze.etraze.api.masters.model.Stockist;
import com.healthtraze.etraze.api.report.model.ChequeHistory;

@Repository
public interface StockistRepository extends BaseRepository<Stockist, String> {

	public Optional<Stockist> findByFirstName(String firstName);

	@Query(value = "SELECT * FROM tbl_stockist WHERE stockist_id = :userId And tenant_id=:tenantId", nativeQuery = true)
	public Stockist findByUserId(String userId, String tenantId);

	@Query(value = "SELECT * FROM tbl_stockist WHERE stockist_id = :userName And tenant_id=:tenantId", nativeQuery = true)
	public Optional<Stockist> email(String userName, String tenantId);

	@Query(value = "SELECT * FROM tbl_stockist WHERE tenant_id = :tenantId and status='ACTIVE' order by stockist_name  ASC ", nativeQuery = true)
	public List<Stockist> findStockistByTenantId(String tenantId);

	@Query(value = "SELECT * FROM tbl_stockist c WHERE c.stockist_id IN (SELECT a.stockist_id FROM tbl_stockist_manufacture a JOIN tbl_manager_manufacturer_mapping b ON a.manufacture = b.manufacturerid And isenable=true WHERE b.user_id=:userId AND c.tenant_id = :tenantId ) and c.status = 'ACTIVE' order by lower(c.stockist_name) ASC ", nativeQuery = true)
	public List<Stockist> findStockistByManufacture(@Param("userId") String userId, @Param("tenantId") String tenantId);

	@Query(value = "SELECT * FROM tbl_stockist WHERE tenant_id = :tenantId", nativeQuery = true)
	public List<Stockist> findAllStockistByTenantId(Pageable pageable, @Param("tenantId") String tenantId);

	@Query(value = "SELECT * FROM tbl_stockist WHERE stockist_id =:stockistId AND tenant_id = :tenantId", nativeQuery = true)
	public Optional<Stockist> findStockistByTenant(String stockistId, String tenantId);

	@Query(value = "select * from tbl_stockist a left join tbl_stockist_manufacture b on a.stockist_id = b.stockist_id where a.tenant_id= :tenantId AND (b.sap_id ILIKE %:sap% AND b.manufacture ILIKE %:man% AND a.city_id ILIKE %:loc% )", nativeQuery = true)
	public List<Stockist> findStockistManufacturerByTenantId(String tenantId, @Param("loc") String loc,
			@Param("man") String man, @Param("sap") String sap);

	@Query(value = "SELECT RIGHT(user_id, 4) FROM tbl_user WHERE tenant_id =:tenantId  AND role_name ='STOCKIST' ORDER BY RIGHT(user_id, 4) DESC LIMIT 1", nativeQuery = true)
	BigInteger getNextSequentialNumberForStockist(@Param("tenantId") String tenantId);

	@Query(value = "SELECT DISTINCT s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category,(select count (*) from tbl_cheques c where c.stockist_id = s.stockist_id and c.sap_id = sm.sap_id and c.status ='INWARD' and c.ischequehold='false' ) AS total, s.city_id,(select count (*) from tbl_cheques c where c.stockist_id = s.stockist_id and c.sap_id = sm.sap_id and c.status ='INWARD' and c.ischequehold='true' )   As hold,sm.location  FROM tbl_stockist s LEFT JOIN tbl_stockist_manufacture sm ON s.stockist_id = sm.stockist_id left join tbl_tenant_manufacture tm ON tm.manufacturer_id = sm.manufacture left join tbl_manufacturer m ON m.manufacturer_id = sm.manufacture LEFT JOIN tbl_cheques c ON s.stockist_id = c.stockist_id  LEFT JOIN tbl_manager_manufacturer_mapping mp ON mp.manufacturerid = tm.manufacturer_id left join tbl_city ct ON ct.city_code=s.city_id WHERE  s.tenant_id = :tenantId  and mp.user_id =:userId and tm.status = 'ACTIVE'  and m.status = 'ACTIVE' and s.status = 'ACTIVE' GROUP BY s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category,s.city_id,c.ischequehold,s.stockist_id,sm.location", nativeQuery = true)
	public List<Object[]> chequeDetailsReport(@Param("tenantId") String tenantId, @Param("userId") String userId);

	@Query(value = "SELECT DISTINCT s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category,(select count (*) from tbl_cheques c where c.stockist_id = s.stockist_id and c.sap_id = sm.sap_id and c.status ='INWARD' and c.ischequehold='false' ) AS total, s.city_id,(select count (*) from tbl_cheques c where c.stockist_id = s.stockist_id and c.sap_id = sm.sap_id and c.status ='INWARD' and c.ischequehold='true' )   As hold,sm.location  FROM tbl_stockist s LEFT JOIN tbl_stockist_manufacture sm ON s.stockist_id = sm.stockist_id left join tbl_tenant_manufacture tm ON tm.manufacturer_id = sm.manufacture left join tbl_manufacturer m ON m.manufacturer_id = sm.manufacture LEFT JOIN tbl_cheques c ON s.stockist_id = c.stockist_id  LEFT JOIN tbl_manager_manufacturer_mapping mp ON mp.manufacturerid = tm.manufacturer_id left join tbl_city ct ON ct.city_code=s.city_id WHERE   s.tenant_id = :tenantId  and mp.user_id =:userId and tm.status = 'ACTIVE'  and m.status = 'ACTIVE' and s.status = 'INACTIVE' GROUP BY s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category,s.city_id,c.ischequehold,s.stockist_id,sm.location", nativeQuery = true)
	public List<Object[]> chequeDetailsReportInActive(@Param("tenantId") String tenantId,
			@Param("userId") String userId);

	@Query(value = "SELECT  s.stockist_name, s.city_id, b.name, c.cheque_number, c.status, c.ischequehold, m.manufacturer_name, sm.sap_id,sm.cheque_category, c.recive_date, c.recived_via,c.deposit_date, c.invoice, c.invoice_amount,  c.adjustedinvoices, c.amount, c.dtscndn, c.dtscndnamount,c.remarks,sm.location FROM tbl_stockist s LEFT JOIN tbl_stockist_manufacture sm ON s.stockist_id = sm.stockist_id LEFT JOIN tbl_cheques c ON s.stockist_id = c.stockist_id AND c.sap_id = sm.sap_id LEFT JOIN tbl_bank b ON c.bank_id = b.code LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = sm.manufacture LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = sm.manufacture LEFT JOIN tbl_manager_manufacturer_mapping mp ON mp.manufacturerid = tm.manufacturer_id WHERE  s.tenant_id = :tenantId AND mp.user_id = :userId AND tm.status = 'ACTIVE' AND m.status = 'ACTIVE' AND s.status = 'ACTIVE' AND b.name ILIKE %:bankName% AND s.city_id ILIKE %:location% AND c.cheque_number ILIKE %:chequeNumber% AND c.status ILIKE %:status% GROUP BY s.stockist_name, s.city_id, b.name, c.cheque_number, c.status, c.ischequehold, m.manufacturer_name, sm.sap_id,sm.cheque_category, c.recive_date, c.recived_via,c.deposit_date, c.invoice, c.invoice_amount,  c.adjustedinvoices, c.amount, c.dtscndn, c.dtscndnamount,c.remarks,sm.location", nativeQuery = true)

	public List<Object[]> chequeStatusReport(@Param("tenantId") String tenantId, @Param("userId") String userId,
			@Param("bankName") String bankName, @Param("location") String location,
			@Param("chequeNumber") String chequeNumber, @Param("status") String status);

	@Query(value = "SELECT  s.stockist_name, s.city_id, b.name, c.cheque_number, c.status, c.ischequehold, m.manufacturer_name, sm.sap_id,sm.cheque_category, c.recive_date, c.recived_via,c.deposit_date, c.invoice, c.invoice_amount,  c.adjustedinvoices, c.amount, c.dtscndn, c.dtscndnamount,c.remarks,sm.location FROM tbl_stockist s LEFT JOIN tbl_stockist_manufacture sm ON s.stockist_id = sm.stockist_id LEFT JOIN tbl_cheques c ON s.stockist_id = c.stockist_id AND c.sap_id = sm.sap_id LEFT JOIN tbl_bank b ON c.bank_id = b.code LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = sm.manufacture LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = sm.manufacture LEFT JOIN tbl_manager_manufacturer_mapping mp ON mp.manufacturerid = tm.manufacturer_id WHERE  s.tenant_id = :tenantId AND mp.user_id = :userId AND tm.status = 'ACTIVE' AND m.status = 'ACTIVE' AND s.status = 'INACTIVE' AND b.name ILIKE %:bankName% AND s.city_id ILIKE %:location% AND c.cheque_number ILIKE %:chequeNumber% AND c.status ILIKE %:status% GROUP BY s.stockist_name, s.city_id, b.name, c.cheque_number, c.status, c.ischequehold, m.manufacturer_name, sm.sap_id,sm.cheque_category, c.recive_date, c.recived_via,c.deposit_date, c.invoice, c.invoice_amount,  c.adjustedinvoices, c.amount, c.dtscndn, c.dtscndnamount,c.remarks,sm.location", nativeQuery = true)

	public List<Object[]> chequeStatusReportInactive(@Param("tenantId") String tenantId, @Param("userId") String userId,
			@Param("bankName") String bankName, @Param("location") String location,
			@Param("chequeNumber") String chequeNumber, @Param("status") String status);

	@Query(value = "SELECT  s.stockist_name, s.city_id, b.name, c.cheque_number, c.status, c.ischequehold, m.manufacturer_name, sm.sap_id,sm.cheque_category, c.recive_date, c.recived_via,c.deposit_date, c.invoice, c.invoice_amount,  c.adjustedinvoices, c.amount, c.dtscndn, c.dtscndnamount,c.remarks,sm.location FROM tbl_stockist s LEFT JOIN tbl_stockist_manufacture sm ON s.stockist_id = sm.stockist_id LEFT JOIN tbl_cheques c ON s.stockist_id = c.stockist_id AND c.sap_id = sm.sap_id LEFT JOIN tbl_bank b ON c.bank_id = b.code LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = sm.manufacture LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = sm.manufacture LEFT JOIN tbl_manager_manufacturer_mapping mp ON mp.manufacturerid = tm.manufacturer_id WHERE  s.tenant_id = :tenantId AND mp.user_id = :userId AND tm.status = 'ACTIVE' AND m.status = 'ACTIVE' AND ischequehold=false AND s.status = 'ACTIVE' AND b.name ILIKE %:bankName% AND s.city_id ILIKE %:location% AND c.cheque_number ILIKE %:chequeNumber% AND c.status ILIKE %:status% GROUP BY s.stockist_name, s.city_id, b.name, c.cheque_number, c.status, c.ischequehold, m.manufacturer_name, sm.sap_id,sm.cheque_category, c.recive_date, c.recived_via,c.deposit_date, c.invoice, c.invoice_amount,  c.adjustedinvoices, c.amount, c.dtscndn, c.dtscndnamount,c.remarks,sm.location", nativeQuery = true)

	public List<Object[]> chequeStatusReportInHand(@Param("tenantId") String tenantId, @Param("userId") String userId,
			@Param("bankName") String bankName, @Param("location") String location,
			@Param("chequeNumber") String chequeNumber, @Param("status") String status);

	@Query(value = "SELECT  s.stockist_name, s.city_id, b.name, c.cheque_number, c.status, c.ischequehold, m.manufacturer_name, sm.sap_id,sm.cheque_category, c.recive_date, c.recived_via,c.deposit_date, c.invoice, c.invoice_amount,  c.adjustedinvoices, c.amount, c.dtscndn, c.dtscndnamount,c.remarks,sm.location FROM tbl_stockist s LEFT JOIN tbl_stockist_manufacture sm ON s.stockist_id = sm.stockist_id LEFT JOIN tbl_cheques c ON s.stockist_id = c.stockist_id AND c.sap_id = sm.sap_id LEFT JOIN tbl_bank b ON c.bank_id = b.code LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = sm.manufacture LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = sm.manufacture LEFT JOIN tbl_manager_manufacturer_mapping mp ON mp.manufacturerid = tm.manufacturer_id WHERE  s.tenant_id = :tenantId AND mp.user_id = :userId AND tm.status = 'ACTIVE' AND m.status = 'ACTIVE' AND ischequehold=false AND s.status = 'INACTIVE' AND b.name ILIKE %:bankName% AND s.city_id ILIKE %:location% AND c.cheque_number ILIKE %:chequeNumber% AND c.status ILIKE %:status% GROUP BY s.stockist_name, s.city_id, b.name, c.cheque_number, c.status, c.ischequehold, m.manufacturer_name, sm.sap_id,sm.cheque_category, c.recive_date, c.recived_via,c.deposit_date, c.invoice, c.invoice_amount,  c.adjustedinvoices, c.amount, c.dtscndn, c.dtscndnamount,c.remarks,sm.location", nativeQuery = true)

	public List<Object[]> chequeStatusReportInHandInActive(@Param("tenantId") String tenantId,
			@Param("userId") String userId, @Param("bankName") String bankName, @Param("location") String location,
			@Param("chequeNumber") String chequeNumber, @Param("status") String status);

	@Query(value = "SELECT  s.stockist_name, s.city_id, b.name, c.cheque_number, c.status, c.ischequehold, m.manufacturer_name, sm.sap_id,sm.cheque_category, c.recive_date, c.recived_via,c.deposit_date, c.invoice, c.invoice_amount,  c.adjustedinvoices, c.amount, c.dtscndn, c.dtscndnamount,c.remarks,sm.location FROM tbl_stockist s LEFT JOIN tbl_stockist_manufacture sm ON s.stockist_id = sm.stockist_id LEFT JOIN tbl_cheques c ON s.stockist_id = c.stockist_id AND c.sap_id = sm.sap_id LEFT JOIN tbl_bank b ON c.bank_id = b.code LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = sm.manufacture LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = sm.manufacture LEFT JOIN tbl_manager_manufacturer_mapping mp ON mp.manufacturerid = tm.manufacturer_id WHERE  s.tenant_id = :tenantId AND mp.user_id = :userId AND tm.status = 'ACTIVE' AND m.status = 'ACTIVE' AND ischequehold=true AND s.status = 'ACTIVE' AND b.name ILIKE %:bankName% AND s.city_id ILIKE %:location% AND c.cheque_number ILIKE %:chequeNumber% AND c.status ILIKE %:status% GROUP BY s.stockist_name, s.city_id, b.name, c.cheque_number, c.status, c.ischequehold, m.manufacturer_name, sm.sap_id,sm.cheque_category, c.recive_date, c.recived_via,c.deposit_date, c.invoice, c.invoice_amount,  c.adjustedinvoices, c.amount, c.dtscndn, c.dtscndnamount,c.remarks,sm.location", nativeQuery = true)

	public List<Object[]> chequeStatusReportOnHold(@Param("tenantId") String tenantId, @Param("userId") String userId,
			@Param("bankName") String bankName, @Param("location") String location,
			@Param("chequeNumber") String chequeNumber, @Param("status") String status);

	@Query(value = "SELECT  s.stockist_name, s.city_id, b.name, c.cheque_number, c.status, c.ischequehold, m.manufacturer_name, sm.sap_id,sm.cheque_category, c.recive_date, c.recived_via,c.deposit_date, c.invoice, c.invoice_amount,  c.adjustedinvoices, c.amount, c.dtscndn, c.dtscndnamount,c.remarks,sm.location FROM tbl_stockist s LEFT JOIN tbl_stockist_manufacture sm ON s.stockist_id = sm.stockist_id LEFT JOIN tbl_cheques c ON s.stockist_id = c.stockist_id AND c.sap_id = sm.sap_id LEFT JOIN tbl_bank b ON c.bank_id = b.code LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = sm.manufacture LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = sm.manufacture LEFT JOIN tbl_manager_manufacturer_mapping mp ON mp.manufacturerid = tm.manufacturer_id WHERE  s.tenant_id = :tenantId AND mp.user_id = :userId AND tm.status = 'ACTIVE' AND m.status = 'ACTIVE' AND ischequehold=true AND s.status = 'INACTIVE' AND b.name ILIKE %:bankName% AND s.city_id ILIKE %:location% AND c.cheque_number ILIKE %:chequeNumber% AND c.status ILIKE %:status% GROUP BY s.stockist_name, s.city_id, b.name, c.cheque_number, c.status, c.ischequehold, m.manufacturer_name, sm.sap_id,sm.cheque_category, c.recive_date, c.recived_via,c.deposit_date, c.invoice, c.invoice_amount,  c.adjustedinvoices, c.amount, c.dtscndn, c.dtscndnamount,c.remarks,sm.location", nativeQuery = true)

	public List<Object[]> chequeStatusReportOnHoldInActive(@Param("tenantId") String tenantId,
			@Param("userId") String userId, @Param("bankName") String bankName, @Param("location") String location,
			@Param("chequeNumber") String chequeNumber, @Param("status") String status);

	@Query(value = "SELECT DISTINCT a.* FROM tbl_stockist a inner join tbl_stockist_manufacture b on  a.stockist_id= b.stockist_id left join  tbl_manufacturer c on c.manufacturer_id=b.manufacture left join tbl_city ct on ct.city_code=a.city_id "
			+ " where a.tenant_id = :tenantId" +

			" AND (a.city_id ILIKE %:value% OR a.stockist_name ILIKE %:value% OR "
			+ "ct.city_name ILIKE %:value% OR a.status ILIKE %:value% OR "
			+ "c.manufacturer_Name ILIKE %:value% OR b.sap_id ILIKE %:value% OR a.stockist_id ILIKE %:value%)", nativeQuery = true)
	public Page<Stockist> findAllStockistByTenantId(Pageable pageable, @Param(value = "tenantId") String id,
			@Param(value = "value") String value);

	@Query(value = "SELECT DISTINCT a.* FROM tbl_stockist a inner join tbl_stockist_manufacture b on  a.stockist_id= b.stockist_id left join  tbl_manufacturer c on c.manufacturer_id=b.manufacture left join tbl_city ct on ct.city_code=a.city_id"
			+ " where a.tenant_id = :tenantId" +

			" AND (a.city_id ILIKE %:value% OR a.stockist_name ILIKE %:value% OR "
			+ "ct.city_name ILIKE %:value% OR a.status ILIKE %:value% OR "
			+ "c.manufacturer_Name ILIKE %:value% OR b.sap_id ILIKE %:value% OR a.stockist_id ILIKE %:value%)", nativeQuery = true)
	public List<Stockist> findAllStockistByTenantId(

			@Param(value = "tenantId") String id, @Param(value = "value") String value);

	@Query(value = "SELECT * FROM tbl_stockist WHERE LOWER(REPLACE(stockist_name,' ', ''))=:stockistName and city_id= :cityId and tenant_id = :tenantId AND status ='ACTIVE'", nativeQuery = true)
	public Optional<Stockist> findStockistBystockistName(@Param("tenantId") String tenantId,
			@Param("stockistName") String stockistName, @Param("cityId") String cityId);

	@Query(value = "SELECT s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category, COALESCE(SUM(CASE WHEN c.sap_id = sm.sap_id AND c.status ='INWARD' THEN 1 ELSE 0 END), 0) AS total, s.city_id FROM tbl_stockist s "
			+ "LEFT JOIN tbl_stockist_manufacture sm ON s.stockist_id = sm.stockist_id "
			+ "left join tbl_tenant_manufacture tm ON tm.manufacturer_id = sm.manufacture and s.tenant_id=tm.tenant_id left join tbl_manufacturer m ON m.manufacturer_id = sm.manufacture "
			+ " LEFT JOIN tbl_cheques c ON s.stockist_id = c.stockist_id  LEFT JOIN tbl_manager_manufacturer_mapping mp ON mp.manufacturerid = tm.manufacturer_id "
			+ "left join tbl_city ct ON ct.city_code=s.city_id WHERE  s.tenant_id = :tenantId  "
			+ "and mp.user_id =:userId and tm.status = 'ACTIVE'  and m.status = 'ACTIVE' and s.status = 'ACTIVE' " + " "
			+ "GROUP BY s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category,s.city_id", nativeQuery = true)

	public List<Object[]> chequeInHandReportActiveStockist(@Param(value = "tenantId") String tenantId,
			@Param(value = "userId") String userId);

	@Query(value = "SELECT s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category, (select count (*) from tbl_cheques c where c.stockist_id = sm.stockist_id and c.sap_id = sm.sap_id and c.status ='INWARD' and c.ischequehold='false' )  AS total, s.city_id ,(select count (*) from tbl_cheques c where c.stockist_id = sm.stockist_id and c.sap_id = sm.sap_id and c.status ='INWARD' and c.ischequehold='true' )  AS is_cheque_hold,sm.location FROM tbl_stockist s LEFT JOIN tbl_stockist_manufacture sm ON s.stockist_id = sm.stockist_id left join tbl_tenant_manufacture tm ON tm.manufacturer_id = sm.manufacture and s.tenant_id=tm.tenant_id left join tbl_manufacturer m ON m.manufacturer_id = sm.manufacture LEFT JOIN tbl_cheques c ON s.stockist_id = c.stockist_id LEFT JOIN tbl_manager_manufacturer_mapping mp ON mp.manufacturerid = tm.manufacturer_id left join tbl_city ct ON ct.city_code=s.city_id WHERE  s.tenant_id = :tenantId  and mp.user_id =:userId and tm.status = 'ACTIVE' and m.status = 'ACTIVE'  and s.status = :stockistStatus and c.status LIKE %:status% GROUP BY s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category,s.city_id,is_cheque_hold,s.stockist_id,sm.location,sm.stockist_id", nativeQuery = true)

	public List<Object[]> chequeInHandReportActiveInward(@Param(value = "tenantId") String tenantId,
			@Param(value = "userId") String userId, @Param(value = "status") String status,
			@Param(value = "stockistStatus") String stockistStatus);

	@Query(value = "SELECT s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category, (select count (*) from tbl_cheques c where c.stockist_id = sm.stockist_id and c.sap_id = sm.sap_id and c.status ='INWARD' and c.ischequehold='false' )  AS total, s.city_id ,(select count (*) from tbl_cheques c where c.stockist_id = sm.stockist_id and c.sap_id = sm.sap_id and c.status ='INWARD' and c.ischequehold='true' )  AS is_cheque_hold,sm.location FROM tbl_stockist s LEFT JOIN tbl_stockist_manufacture sm ON s.stockist_id = sm.stockist_id left join tbl_tenant_manufacture tm ON tm.manufacturer_id = sm.manufacture and s.tenant_id=tm.tenant_id left join tbl_manufacturer m ON m.manufacturer_id = sm.manufacture LEFT JOIN tbl_cheques c ON s.stockist_id = c.stockist_id LEFT JOIN tbl_manager_manufacturer_mapping mp ON mp.manufacturerid = tm.manufacturer_id left join tbl_city ct ON ct.city_code=s.city_id WHERE  s.tenant_id = :tenantId  and mp.user_id =:userId and tm.status = 'ACTIVE' and m.status = 'ACTIVE' and s.status = 'ACTIVE'  and c.status LIKE %:status% GROUP BY s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category,s.city_id,is_cheque_hold,s.stockist_id,sm.location,sm.stockist_id", nativeQuery = true)

	public List<Object[]> chequeInHandReportActiveAdvance(@Param(value = "tenantId") String tenantId,
			@Param(value = "userId") String userId, @Param(value = "status") String status);

	@Query(value = "SELECT s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category, (select count (*) from tbl_cheques c where c.stockist_id = sm.stockist_id and c.sap_id = sm.sap_id and c.status ='INWARD' and c.ischequehold='false' )  AS total, s.city_id ,(select count (*) from tbl_cheques c where c.stockist_id = sm.stockist_id and c.sap_id = sm.sap_id and c.status ='INWARD' and c.ischequehold='true' )  AS is_cheque_hold,sm.location FROM tbl_stockist s LEFT JOIN tbl_stockist_manufacture sm ON s.stockist_id = sm.stockist_id left join tbl_tenant_manufacture tm ON tm.manufacturer_id = sm.manufacture and s.tenant_id=tm.tenant_id left join tbl_manufacturer m ON m.manufacturer_id = sm.manufacture LEFT JOIN tbl_cheques c ON s.stockist_id = c.stockist_id LEFT JOIN tbl_manager_manufacturer_mapping mp ON mp.manufacturerid = tm.manufacturer_id left join tbl_city ct ON ct.city_code=s.city_id WHERE  s.tenant_id = :tenantId and  mp.user_id =:userId and tm.status = 'ACTIVE' and m.status = 'ACTIVE' and s.status = 'ACTIVE'  and c.status LIKE %:status% GROUP BY s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category,s.city_id,is_cheque_hold,s.stockist_id,sm.location,sm.stockist_id", nativeQuery = true)

	public List<Object[]> chequeInHandReportActivesAdvance(@Param(value = "tenantId") String tenantId,
			@Param(value = "userId") String userId, @Param(value = "status") String status);

	@Query(value = "SELECT s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category, (SELECT COUNT(*) FROM tbl_cheques c LEFT JOIN tbl_bank b ON b.code = c.bank_id WHERE c.stockist_id = sm.stockist_id AND c.sap_id = sm.sap_id AND b.status = 'ACTIVE' AND c.isreturned = false AND c.status = 'SECURITY' AND b.status = 'ACTIVE') AS total , s.city_id ,(SELECT COALESCE(SUM(1), 0) FROM tbl_cheques c LEFT JOIN tbl_bank bk ON bk.code = c.bank_id WHERE c.sap_id = sm.sap_id AND s.stockist_id =sm.stockist_id AND  c.ischequehold='true' AND c.status ='SECURITY' AND bk.status = 'ACTIVE')  AS is_cheque_hold,sm.location FROM tbl_stockist s LEFT JOIN tbl_stockist_manufacture sm ON s.stockist_id = sm.stockist_id left join tbl_tenant_manufacture tm ON tm.manufacturer_id = sm.manufacture and s.tenant_id=tm.tenant_id left join tbl_manufacturer m ON m.manufacturer_id = sm.manufacture LEFT JOIN tbl_cheques c ON s.stockist_id = c.stockist_id LEFT JOIN tbl_manager_manufacturer_mapping mp ON mp.manufacturerid = tm.manufacturer_id left join tbl_city ct ON ct.city_code=s.city_id WHERE  s.tenant_id = :tenantId and  mp.user_id =:userId and tm.status = 'ACTIVE' and m.status = 'ACTIVE' and s.status = 'ACTIVE'  and c.status LIKE %:status% GROUP BY s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category,s.city_id,is_cheque_hold,s.stockist_id,sm.location,sm.stockist_id", nativeQuery = true)

	public List<Object[]> chequeInHandReportSecurity(@Param(value = "tenantId") String tenantId,
			@Param(value = "userId") String userId, @Param(value = "status") String status);

	@Query(value = "SELECT s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category, (SELECT COUNT(*) FROM tbl_cheques c LEFT JOIN tbl_bank b ON b.code = c.bank_id WHERE c.stockist_id = sm.stockist_id AND c.sap_id = sm.sap_id AND b.status = 'ACTIVE' AND c.isreturned = false AND c.status = 'SECURITY' AND b.status = 'ACTIVE') AS total , s.city_id, (SELECT COALESCE(SUM(1), 0) FROM tbl_cheques c LEFT JOIN tbl_bank bk ON bk.code = c.bank_id WHERE c.sap_id = sm.sap_id AND s.stockist_id =sm.stockist_id AND  c.ischequehold='true' AND c.status ='SECURITY' AND bk.status = 'ACTIVE') AS  is_cheque_hold,sm.location FROM tbl_stockist s LEFT JOIN tbl_stockist_manufacture sm ON s.stockist_id = sm.stockist_id left join tbl_tenant_manufacture tm ON tm.manufacturer_id = sm.manufacture and s.tenant_id=tm.tenant_id left join tbl_manufacturer m ON m.manufacturer_id = sm.manufacture LEFT JOIN tbl_cheques c ON s.stockist_id = c.stockist_id LEFT JOIN tbl_manager_manufacturer_mapping mp ON mp.manufacturerid = tm.manufacturer_id left join tbl_city ct ON ct.city_code=s.city_id WHERE s.tenant_id = :tenantId and mp.user_id =:userId and  tm.status = 'ACTIVE' and m.status = 'ACTIVE'  and c.status ILIKE %:status% and s.status = :stockistStatus GROUP BY s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category,s.city_id,is_cheque_hold,s.stockist_id,sm.location,sm.stockist_id", nativeQuery = true)
	public List<Object[]> chequeInHandReportActiveSecurity(@Param(value = "tenantId") String tenantId,
			@Param(value = "userId") String userId, @Param(value = "status") String status,
			@Param(value = "stockistStatus") String stockistStatus);

	@Query(value = "SELECT s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category, COALESCE(SUM(CASE WHEN c.sap_id = sm.sap_id AND s.stockist_id = sm.stockist_id AND c.status ='SECURITY' THEN 1 ELSE 0 END), 0) AS total, s.city_id FROM tbl_stockist s "
			+ "LEFT JOIN tbl_stockist_manufacture sm ON s.stockist_id = sm.stockist_id "
			+ "left join tbl_tenant_manufacture tm ON tm.manufacturer_id = sm.manufacture and s.tenant_id=tm.tenant_id left join tbl_manufacturer m ON m.manufacturer_id = sm.manufacture "
			+ " LEFT JOIN tbl_cheques c ON s.stockist_id = c.stockist_id  LEFT JOIN tbl_manager_manufacturer_mapping mp ON mp.manufacturerid = tm.manufacturer_id "
			+ "left join tbl_city ct ON ct.city_code=s.city_id WHERE  s.tenant_id = :tenantId  "
			+ "and mp.user_id =:userId and  tm.status = 'ACTIVE'  and m.status = 'ACTIVE' and s.status = 'ACTIVE' and ct.status = 'ACTIVE' "
			+ "and c.status ILIKE %:status% "
			+ "GROUP BY s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category,s.city_id", nativeQuery = true)

	public List<Object[]> chequeInHandReportActiveStatusSecurity(@Param(value = "tenantId") String tenantId,
			@Param(value = "userId") String userId, @Param(value = "status") String status);

	@Query(value = "SELECT s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category, COALESCE(SUM(CASE WHEN c.sap_id = sm.sap_id AND s.stockist_id = sm.stockist_id AND c.status ='INWARD' THEN 1 ELSE 0 END), 0) AS total, s.city_id FROM tbl_stockist s "
			+ "LEFT JOIN tbl_stockist_manufacture sm ON s.stockist_id = sm.stockist_id "
			+ "left join tbl_tenant_manufacture tm ON tm.manufacturer_id = sm.manufacture and s.tenant_id=tm.tenant_id left join tbl_manufacturer m ON m.manufacturer_id = sm.manufacture "
			+ " LEFT JOIN tbl_cheques c ON s.stockist_id = c.stockist_id  LEFT JOIN tbl_manager_manufacturer_mapping mp ON mp.manufacturerid = tm.manufacturer_id "
			+ "left join tbl_city ct ON ct.city_code=s.city_id WHERE  (s.created_on >=:startDate AND s.created_on <=:endDate) and s.tenant_id = :tenantId  "
			+ "and mp.user_id =:userId and tm.status = 'ACTIVE'  and m.status = 'ACTIVE' and s.status = 'INACTIVE' and ct.status = 'ACTIVE' "
			+ " "
			+ "GROUP BY s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category,s.city_id", nativeQuery = true)

	public List<Object[]> chequeInHandReportInActiveStockist(@Param(value = "tenantId") String tenantId,
			@Param(value = "userId") String userId);

	@Query(value = " SELECT s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category,(select count (*) from tbl_cheques c where c.stockist_id = s.stockist_id and c.sap_id = sm.sap_id and c.status ='INWARD'  and c.ischequehold='false' ) as total, s.city_id,sm.location FROM tbl_stockist s LEFT JOIN tbl_stockist_manufacture sm ON s.stockist_id = sm.stockist_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = sm.manufacture and s.tenant_id=tm.tenant_id LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = sm.manufacture LEFT JOIN tbl_cheques c ON s.stockist_id = c.stockist_id LEFT JOIN tbl_manager_manufacturer_mapping mp ON mp.manufacturerid = tm.manufacturer_id LEFT JOIN tbl_city ct ON ct.city_code = s.city_id left join list_value_values v on v.code=sm.cheque_category WHERE s.tenant_id=:tenantId and mp.user_id=:userId  and tm.status = 'ACTIVE' AND m.status = 'ACTIVE' AND s.status = 'ACTIVE'  AND (select count (*) from tbl_cheques c where c.stockist_id = s.stockist_id and c.sap_id = sm.sap_id and c.status ='INWARD'  and c.ischequehold='false' )<CAST(v.value AS bigint) GROUP BY s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category, sm.threshold, s.city_id ,s.stockist_id,sm.location  ", nativeQuery = true)
	public List<Object[]> thresholdLimit(@Param(value = "tenantId") String tenantId,
			@Param(value = "userId") String userId);

	@Query(value = " SELECT s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category,(select count (*) from tbl_cheques c where c.stockist_id = s.stockist_id and c.sap_id = sm.sap_id and c.status ='INWARD'  and c.ischequehold='false' ) as total, s.city_id,sm.location FROM tbl_stockist s LEFT JOIN tbl_stockist_manufacture sm ON s.stockist_id = sm.stockist_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = sm.manufacture and s.tenant_id=tm.tenant_id LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = sm.manufacture LEFT JOIN tbl_cheques c ON s.stockist_id = c.stockist_id LEFT JOIN tbl_manager_manufacturer_mapping mp ON mp.manufacturerid = tm.manufacturer_id LEFT JOIN tbl_city ct ON ct.city_code = s.city_id left join list_value_values v on v.code=sm.cheque_category WHERE s.tenant_id=:tenantId and mp.user_id=:userId  and tm.status = 'ACTIVE' AND m.status = 'ACTIVE' AND s.status = 'ACTIVE' AND EXTRACT(MONTH FROM s.created_on) =:month  AND (select count (*) from tbl_cheques c where c.stockist_id = s.stockist_id and c.sap_id = sm.sap_id and c.status ='INWARD'  and c.ischequehold='false' )<CAST(v.value AS bigint) GROUP BY s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category, sm.threshold, s.city_id ,s.stockist_id,sm.location  ", nativeQuery = true)
	public List<Object[]> thresholdLimitMonth(@Param(value = "tenantId") String tenantId,
			@Param(value = "userId") String userId, int month);

	@Query(value = " SELECT s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category,(select count (*) from tbl_cheques c where c.stockist_id = s.stockist_id and c.sap_id = sm.sap_id and c.status ='INWARD'  and c.ischequehold='false' ) as total, s.city_id,sm.location FROM tbl_stockist s LEFT JOIN tbl_stockist_manufacture sm ON s.stockist_id = sm.stockist_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = sm.manufacture and s.tenant_id=tm.tenant_id LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = sm.manufacture LEFT JOIN tbl_cheques c ON s.stockist_id = c.stockist_id LEFT JOIN tbl_manager_manufacturer_mapping mp ON mp.manufacturerid = tm.manufacturer_id LEFT JOIN tbl_city ct ON ct.city_code = s.city_id left join list_value_values v on v.code=sm.cheque_category WHERE s.tenant_id=:tenantId and mp.user_id=:userId  and tm.status = 'ACTIVE' AND m.status = 'ACTIVE' AND s.status = 'INACTIVE'  AND (select count (*) from tbl_cheques c where c.stockist_id = s.stockist_id and c.sap_id = sm.sap_id and c.status ='INWARD'  and c.ischequehold='false' )<CAST(v.value AS bigint) GROUP BY s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category, sm.threshold, s.city_id ,s.stockist_id,sm.location ", nativeQuery = true)
	public List<Object[]> thresholdLimitInActive(@Param(value = "tenantId") String tenantId,
			@Param(value = "userId") String userId);

	@Query(value = " SELECT s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category,(select count (*) from tbl_cheques c where c.stockist_id = s.stockist_id and c.sap_id = sm.sap_id and c.status ='INWARD'  and c.ischequehold='false' ) as total, s.city_id,sm.location FROM tbl_stockist s LEFT JOIN tbl_stockist_manufacture sm ON s.stockist_id = sm.stockist_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = sm.manufacture and s.tenant_id=tm.tenant_id LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = sm.manufacture LEFT JOIN tbl_cheques c ON s.stockist_id = c.stockist_id LEFT JOIN tbl_manager_manufacturer_mapping mp ON mp.manufacturerid = tm.manufacturer_id LEFT JOIN tbl_city ct ON ct.city_code = s.city_id left join list_value_values v on v.code=sm.cheque_category WHERE s.tenant_id=:tenantId and mp.user_id=:userId  and tm.status = 'ACTIVE' AND m.status = 'ACTIVE' AND s.status = 'INACTIVE' AND EXTRACT(MONTH FROM s.created_on) =:month   AND (select count (*) from tbl_cheques c where c.stockist_id = s.stockist_id and c.sap_id = sm.sap_id and c.status ='INWARD'  and c.ischequehold='false' )<CAST(v.value AS bigint) GROUP BY s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category, sm.threshold, s.city_id ,s.stockist_id,sm.location ", nativeQuery = true)
	public List<Object[]> thresholdLimitInActiveMonth(@Param(value = "tenantId") String tenantId,
			@Param(value = "userId") String userId, int month);

	@Query(value = "SELECT s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category, c.cheque_number, COALESCE(SUM(CASE WHEN c.sap_id = sm.sap_id AND s.stockist_id = sm.stockist_id AND c.status = 'INWARD' THEN 1 ELSE 0 END), 0) AS total, s.city_id, b.name AS bankName, (SELECT b.name FROM tbl_cheques c LEFT JOIN tbl_bank b ON c.bank_id = b.code WHERE c.tenant_id=:tenantId AND c.stockist_id = s.stockist_id AND c.sap_id = sm.sap_id AND c.status = 'SECURITY' LIMIT 1) AS security, sm.location FROM tbl_stockist s LEFT JOIN tbl_stockist_manufacture sm ON s.stockist_id = sm.stockist_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = sm.manufacture AND s.tenant_id=tm.tenant_id LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = sm.manufacture LEFT JOIN tbl_cheques c ON s.stockist_id = c.stockist_id AND c.sap_id = sm.sap_id LEFT JOIN tbl_manager_manufacturer_mapping mp ON mp.manufacturerid = sm.manufacture AND sm.tenant_id=mp.tenant_id LEFT JOIN tbl_bank b ON c.bank_id = b.code LEFT JOIN tbl_city ct ON ct.city_code = s.city_id WHERE tm.status = 'ACTIVE' and mp.user_id=:userId AND m.status = 'ACTIVE' AND s.status = 'ACTIVE' AND c.status = 'INWARD' AND s.tenant_id=:tenantId AND b.code NOT IN (SELECT c.bank_id FROM tbl_cheques c WHERE c.stockist_id = s.stockist_id AND c.sap_id = sm.sap_id AND c.status = 'SECURITY' AND c.tenant_id=:tenantId) AND (SELECT b.name FROM tbl_cheques c LEFT JOIN tbl_bank b ON c.bank_id = b.code WHERE c.stockist_id = s.stockist_id AND c.sap_id = sm.sap_id AND c.status = 'SECURITY' LIMIT 1) IS NOT NULL  GROUP BY s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category, s.city_id, b.name, security, c.cheque_number, sm.location ", nativeQuery = true)
	public List<Object[]> securityTooutWard(@Param(value = "tenantId") String tenantId,
			@Param(value = "userId") String userId);

	@Query(value = "SELECT s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category, c.cheque_number, COALESCE(SUM(CASE WHEN c.sap_id = sm.sap_id AND s.stockist_id = sm.stockist_id AND c.status = 'INWARD' THEN 1 ELSE 0 END), 0) AS total, s.city_id, b.name AS bankName, (SELECT b.name FROM tbl_cheques c LEFT JOIN tbl_bank b ON c.bank_id = b.code WHERE c.tenant_id=:tenantId AND c.stockist_id = s.stockist_id AND c.sap_id = sm.sap_id AND c.status = 'SECURITY' LIMIT 1) AS security, sm.location FROM tbl_stockist s LEFT JOIN tbl_stockist_manufacture sm ON s.stockist_id = sm.stockist_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = sm.manufacture AND s.tenant_id=tm.tenant_id LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = sm.manufacture LEFT JOIN tbl_cheques c ON s.stockist_id = c.stockist_id AND c.sap_id = sm.sap_id LEFT JOIN tbl_manager_manufacturer_mapping mp ON mp.manufacturerid = sm.manufacture AND sm.tenant_id=mp.tenant_id LEFT JOIN tbl_bank b ON c.bank_id = b.code LEFT JOIN tbl_city ct ON ct.city_code = s.city_id WHERE tm.status = 'ACTIVE' and mp.user_id=:userId  AND m.status = 'ACTIVE' AND s.status = 'INACTIVE' AND c.status = 'INWARD' AND s.tenant_id=:tenantId AND b.code NOT IN (SELECT c.bank_id FROM tbl_cheques c WHERE c.stockist_id = s.stockist_id AND c.sap_id = sm.sap_id AND c.status = 'SECURITY' AND c.tenant_id=:tenantId) AND (SELECT b.name FROM tbl_cheques c LEFT JOIN tbl_bank b ON c.bank_id = b.code WHERE c.stockist_id = s.stockist_id AND c.sap_id = sm.sap_id AND c.status = 'SECURITY' LIMIT 1) IS NOT NULL  GROUP BY s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category, s.city_id, b.name, security, c.cheque_number, sm.location ", nativeQuery = true)
	public List<Object[]> securityTooutWardInActive(@Param(value = "tenantId") String tenantId,
			@Param(value = "userId") String userId);

	@Query(value = "SELECT  s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category, COALESCE(SUM(CASE WHEN c.sap_id = sm.sap_id and c.stockist_id = sm.stockist_id AND c.status ='SECURITY' THEN 1 ELSE 0 END), 0) AS total, s.city_id,sm.location FROM tbl_stockist s LEFT JOIN tbl_stockist_manufacture sm ON s.stockist_id = sm.stockist_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = sm.manufacture and s.tenant_id=tm.tenant_id LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = sm.manufacture LEFT JOIN tbl_cheques c ON s.stockist_id = c.stockist_id LEFT JOIN tbl_manager_manufacturer_mapping mp ON mp.manufacturerid = tm.manufacturer_id LEFT JOIN tbl_city ct ON ct.city_code=s.city_id WHERE  s.tenant_id=:tenantId AND mp.user_id=:userId AND  tm.status = 'ACTIVE' AND m.status = 'ACTIVE' AND s.status = 'ACTIVE'  GROUP BY s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category, s.city_id,sm.location HAVING COALESCE(SUM(CASE WHEN c.sap_id = sm.sap_id AND c.stockist_id=sm.stockist_id AND c.status ='SECURITY' THEN 1 ELSE 0 END), 0) = 0", nativeQuery = true)
	public List<Object[]> noSecuritCheques(@Param(value = "tenantId") String tenantId,
			@Param(value = "userId") String userId);

	@Query(value = "SELECT  s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category, COALESCE(SUM(CASE WHEN c.sap_id = sm.sap_id and c.stockist_id = sm.stockist_id AND c.status ='SECURITY' THEN 1 ELSE 0 END), 0) AS total, s.city_id,sm.location FROM tbl_stockist s LEFT JOIN tbl_stockist_manufacture sm ON s.stockist_id = sm.stockist_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = sm.manufacture and s.tenant_id=tm.tenant_id LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = sm.manufacture LEFT JOIN tbl_cheques c ON s.stockist_id = c.stockist_id LEFT JOIN tbl_manager_manufacturer_mapping mp ON mp.manufacturerid = tm.manufacturer_id LEFT JOIN tbl_city ct ON ct.city_code=s.city_id WHERE  s.tenant_id=:tenantId AND mp.user_id=:userId AND  tm.status = 'ACTIVE' AND m.status = 'ACTIVE' AND s.status = 'ACTIVE' AND EXTRACT(MONTH FROM s.created_on) =:month   GROUP BY s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category, s.city_id,sm.location HAVING COALESCE(SUM(CASE WHEN c.sap_id = sm.sap_id AND c.stockist_id=sm.stockist_id AND c.status ='SECURITY' THEN 1 ELSE 0 END), 0) = 0", nativeQuery = true)
	public List<Object[]> noSecuritChequesMonth(@Param(value = "tenantId") String tenantId,
			@Param(value = "userId") String userId, int month);

	@Query(value = "SELECT  s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category, COALESCE(SUM(CASE WHEN c.sap_id = sm.sap_id and c.stockist_id = sm.stockist_id AND c.status ='SECURITY' THEN 1 ELSE 0 END), 0) AS total, s.city_id,sm.location FROM tbl_stockist s LEFT JOIN tbl_stockist_manufacture sm ON s.stockist_id = sm.stockist_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = sm.manufacture and s.tenant_id=tm.tenant_id LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = sm.manufacture LEFT JOIN tbl_cheques c ON s.stockist_id = c.stockist_id LEFT JOIN tbl_manager_manufacturer_mapping mp ON mp.manufacturerid = tm.manufacturer_id LEFT JOIN tbl_city ct ON ct.city_code=s.city_id WHERE  s.tenant_id=:tenantId AND mp.user_id=:userId AND  tm.status = 'ACTIVE' AND m.status = 'ACTIVE' AND s.status = 'INACTIVE'  GROUP BY s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category, s.city_id,sm.location HAVING COALESCE(SUM(CASE WHEN c.sap_id = sm.sap_id AND c.stockist_id=sm.stockist_id AND c.status ='SECURITY' THEN 1 ELSE 0 END), 0) = 0", nativeQuery = true)
	public List<Object[]> noSecuritChequesInactive(@Param(value = "tenantId") String tenantId,
			@Param(value = "userId") String userId);

	@Query(value = "SELECT  s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category, COALESCE(SUM(CASE WHEN c.sap_id = sm.sap_id and c.stockist_id = sm.stockist_id AND c.status ='SECURITY' THEN 1 ELSE 0 END), 0) AS total, s.city_id,sm.location FROM tbl_stockist s LEFT JOIN tbl_stockist_manufacture sm ON s.stockist_id = sm.stockist_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = sm.manufacture and s.tenant_id=tm.tenant_id LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = sm.manufacture LEFT JOIN tbl_cheques c ON s.stockist_id = c.stockist_id LEFT JOIN tbl_manager_manufacturer_mapping mp ON mp.manufacturerid = tm.manufacturer_id LEFT JOIN tbl_city ct ON ct.city_code=s.city_id WHERE  s.tenant_id=:tenantId AND mp.user_id=:userId AND  tm.status = 'ACTIVE' AND m.status = 'ACTIVE' AND s.status = 'INACTIVE' AND EXTRACT(MONTH FROM s.created_on) =:month   GROUP BY s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category, s.city_id,sm.location HAVING COALESCE(SUM(CASE WHEN c.sap_id = sm.sap_id AND c.stockist_id=sm.stockist_id AND c.status ='SECURITY' THEN 1 ELSE 0 END), 0) = 0", nativeQuery = true)
	public List<Object[]> noSecuritChequesInactiveMonth(@Param(value = "tenantId") String tenantId,
			@Param(value = "userId") String userId, int month);

	@Query(value = "SELECT * FROM tbl_stockist WHERE LOWER( stockist_name)=:stockistName and  LOWER(city_id)= :cityId and LOWER(tenant_id)=:tenant", nativeQuery = true)

	List<Stockist> findByNameAndCity(String stockistName, String cityId, String tenant);

	@Query(value = "SELECT * FROM tbl_stockist WHERE (LOWER(REPLACE(stockist_name, ' ', ''))) =:stockistName and city_id= :cityId and tenant_id=:tenant and status = 'ACTIVE' limit 1", nativeQuery = true)
	Optional<Stockist> findByNameAndCityPresent(String stockistName, String cityId, String tenant);

	@Query(value = "SELECT DISTINCT s.stockist_name, sm.cheque_category, sm.sap_id, sm.credit_days, c.invoice, c.invoice_amount FROM tbl_stockist s INNER JOIN tbl_stockist_manufacture sm ON sm.stockist_id = s.stockist_id INNER JOIN tbl_cheques c ON sm.stockist_id = c.stockist_id AND sm.sap_id = c.sap_id INNER JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = sm.manufacture INNER JOIN tbl_manufacturer m ON m.manufacturer_id = tm.manufacturer_id INNER JOIN tbl_manager_manufacturer_mapping mp ON mp.manufacturerid = tm.manufacturer_id WHERE s.tenant_id =:tenantId AND mp.user_id =:userId AND tm.status = 'ACTIVE' AND m.status = 'ACTIVE' AND s.status='ACTIVE' and c.status='OUTWARD' ", nativeQuery = true)
	public List<Object[]> chequeDueDate(@Param(value = "tenantId") String tenantId,
			@Param(value = "userId") String userId);

	@Query(value = "SELECT DISTINCT s.stockist_name, sm.cheque_category, sm.sap_id, sm.credit_days, c.invoice, c.invoice_amount FROM tbl_stockist s INNER JOIN tbl_stockist_manufacture sm ON sm.stockist_id = s.stockist_id INNER JOIN tbl_cheques c ON sm.stockist_id = c.stockist_id AND sm.sap_id = c.sap_id INNER JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = sm.manufacture INNER JOIN tbl_manufacturer m ON m.manufacturer_id = tm.manufacturer_id INNER JOIN tbl_manager_manufacturer_mapping mp ON mp.manufacturerid = tm.manufacturer_id WHERE s.tenant_id =:tenantId AND mp.user_id =:userId AND tm.status = 'ACTIVE' AND m.status = 'ACTIVE' AND s.status='INACTIVE' and c.status='OUTWARD' ", nativeQuery = true)
	public List<Object[]> chequeDueDateInActive(@Param(value = "tenantId") String tenantId,
			@Param(value = "userId") String userId);

	@Query(value = "select * from tbl_stockist where tenant_id=:tenantId order by stockist_name ASC ", nativeQuery = true)
	public List<Stockist> findAllTenants(@Param(value = "tenantId") String tenantId);

	@Query(value = "SELECT DISTINCT inv.invoice_number, inv.created_on, s.stockist_name, m.manufacturer_name, inv.delivery_date, inv.due_date, CASE WHEN inv.delivery_date > inv.due_date THEN 'Yes' ELSE 'No' END AS overdue, EXTRACT(DAY FROM AGE(CURRENT_TIMESTAMP, inv.delivery_date)) AS days_taken,sm.location,s.city_id FROM tbl_ticket_order_invoice inv LEFT JOIN tbl_ticket t ON t.ticket_id = inv.ticket_id LEFT JOIN tbl_stockist s ON s.stockist_id = t.stockist_id LEFT JOIN tbl_stockist_manufacture sm ON sm.stockist_id = t.stockist_id AND sm.manufacture = t.manufacturer_id LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = t.manufacturer_id LEFT JOIN tbl_cheques c ON c.stockist_id = sm.stockist_id AND c.sap_id = sm.sap_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = t.manufacturer_id LEFT JOIN tbl_manager_manufacturer_mapping mp ON mp.manufacturerid = t.manufacturer_id WHERE inv.tenant_id =:tenantId AND mp.user_id =:userId AND inv.status IN ('DELIVERED','POD RECEIVED') AND m.status = 'ACTIVE' AND tm.status = 'ACTIVE' and inv.cheque_status=false AND (c.status IS NULL OR c.status != 'OUTWARD' OR c.status = 'INWARD' OR c.status = 'SECURITY') ", nativeQuery = true)
	public List<Object[]> paymentReceived(@Param(value = "userId") String userId,
			@Param(value = "tenantId") String tenantId);

	@Query(value = "SELECT DISTINCT inv.invoice_number, inv.created_on, s.stockist_name, m.manufacturer_name, inv.delivery_date, inv.due_date, CASE WHEN inv.delivery_date > inv.due_date THEN 'Yes' ELSE 'No' END AS overdue, EXTRACT(DAY FROM AGE(CURRENT_TIMESTAMP, inv.delivery_date)) AS days_taken,sm.location,s.city_id FROM tbl_ticket_order_invoice inv LEFT JOIN tbl_ticket t ON t.ticket_id = inv.ticket_id LEFT JOIN tbl_stockist s ON s.stockist_id = t.stockist_id LEFT JOIN tbl_stockist_manufacture sm ON sm.stockist_id = t.stockist_id AND sm.manufacture = t.manufacturer_id LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = t.manufacturer_id LEFT JOIN tbl_cheques c ON c.stockist_id = sm.stockist_id AND c.sap_id = sm.sap_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = t.manufacturer_id LEFT JOIN tbl_manager_manufacturer_mapping mp ON mp.manufacturerid = t.manufacturer_id WHERE inv.tenant_id =:tenantId AND mp.user_id =:userId AND inv.status IN ('DELIVERED','POD RECEIVED') AND m.status = 'ACTIVE' AND tm.status = 'ACTIVE' and inv.cheque_status=false AND (c.status IS NULL OR c.status != 'OUTWARD' OR c.status = 'INWARD' OR c.status = 'SECURITY') AND EXTRACT(MONTH FROM inv.created_on) =:month ", nativeQuery = true)
	public List<Object[]> paymentReceivedMonth(@Param(value = "userId") String userId,
			@Param(value = "tenantId") String tenantId, int month);

	@Query(value = "select distinct s.stockist_id,s.stockist_name,s.city_id from tbl_stockist s left join tbl_stockist_manufacture sm on s.stockist_id =sm.stockist_id where s.tenant_id=:tenantId and sm.isenable=true and sm.manufacture =:userId and s.status='ACTIVE' order by s.stockist_name asc", nativeQuery = true)
	public List<Object[]> stockisMnaufacture(String tenantId, String userId);

	@Query(value = " SELECT s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category,(select count (*) from tbl_cheques c where c.stockist_id = s.stockist_id and c.sap_id = sm.sap_id and c.status ='INWARD'  and c.ischequehold='false' ) as total, s.city_id,sm.location FROM tbl_stockist s LEFT JOIN tbl_stockist_manufacture sm ON s.stockist_id = sm.stockist_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = sm.manufacture and s.tenant_id=tm.tenant_id LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = sm.manufacture LEFT JOIN tbl_cheques c ON s.stockist_id = c.stockist_id  LEFT JOIN tbl_city ct ON ct.city_code = s.city_id left join list_value_values v on v.code=sm.cheque_category WHERE s.tenant_id=:tenantId  and tm.status = 'ACTIVE' AND m.status = 'ACTIVE' AND s.status = 'ACTIVE'   AND (select count (*) from tbl_cheques c where c.stockist_id = s.stockist_id and c.sap_id = sm.sap_id and c.status ='INWARD'  and c.ischequehold='false' )<CAST(v.value AS bigint) GROUP BY s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category, sm.threshold, s.city_id ,s.stockist_id,sm.location ", nativeQuery = true)
	public List<Object[]> thresholdLimitSuper(@Param(value = "tenantId") String tenantId);

	@Query(value = " SELECT s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category,(select count (*) from tbl_cheques c where c.stockist_id = s.stockist_id and c.sap_id = sm.sap_id and c.status ='INWARD'  and c.ischequehold='false' ) as total, s.city_id,sm.location FROM tbl_stockist s LEFT JOIN tbl_stockist_manufacture sm ON s.stockist_id = sm.stockist_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = sm.manufacture and s.tenant_id=tm.tenant_id LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = sm.manufacture LEFT JOIN tbl_cheques c ON s.stockist_id = c.stockist_id  LEFT JOIN tbl_city ct ON ct.city_code = s.city_id left join list_value_values v on v.code=sm.cheque_category WHERE s.tenant_id=:tenantId  and tm.status = 'ACTIVE' AND m.status = 'ACTIVE' AND s.status = 'ACTIVE' AND EXTRACT(MONTH FROM s.created_on) =:month   AND (select count (*) from tbl_cheques c where c.stockist_id = s.stockist_id and c.sap_id = sm.sap_id and c.status ='INWARD'  and c.ischequehold='false' )<CAST(v.value AS bigint) GROUP BY s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category, sm.threshold, s.city_id ,s.stockist_id,sm.location ", nativeQuery = true)
	public List<Object[]> thresholdLimitSuperMonth(@Param(value = "tenantId") String tenantId, int month);

	@Query(value = " SELECT s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category,(select count (*) from tbl_cheques c where c.stockist_id = s.stockist_id and c.sap_id = sm.sap_id and c.status ='INWARD'  and c.ischequehold='false' ) as total, s.city_id,sm.location FROM tbl_stockist s LEFT JOIN tbl_stockist_manufacture sm ON s.stockist_id = sm.stockist_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = sm.manufacture and s.tenant_id=tm.tenant_id LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = sm.manufacture LEFT JOIN tbl_cheques c ON s.stockist_id = c.stockist_id LEFT JOIN tbl_city ct ON ct.city_code = s.city_id left join list_value_values v on v.code=sm.cheque_category WHERE s.tenant_id=:tenantId  and tm.status = 'ACTIVE' AND m.status = 'ACTIVE' AND s.status = 'INACTIVE'  AND (select count (*) from tbl_cheques c where c.stockist_id = s.stockist_id and c.sap_id = sm.sap_id and c.status ='INWARD'  and c.ischequehold='false' )<CAST(v.value AS bigint) GROUP BY s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category, sm.threshold, s.city_id ,s.stockist_id,sm.location ", nativeQuery = true)
	public List<Object[]> thresholdLimitInActiveSuper(@Param(value = "tenantId") String tenantId);

	@Query(value = " SELECT s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category,(select count (*) from tbl_cheques c where c.stockist_id = s.stockist_id and c.sap_id = sm.sap_id and c.status ='INWARD'  and c.ischequehold='false' ) as total, s.city_id,sm.location FROM tbl_stockist s LEFT JOIN tbl_stockist_manufacture sm ON s.stockist_id = sm.stockist_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = sm.manufacture and s.tenant_id=tm.tenant_id LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = sm.manufacture LEFT JOIN tbl_cheques c ON s.stockist_id = c.stockist_id LEFT JOIN tbl_city ct ON ct.city_code = s.city_id left join list_value_values v on v.code=sm.cheque_category WHERE s.tenant_id=:tenantId  and tm.status = 'ACTIVE' AND m.status = 'ACTIVE' AND s.status = 'INACTIVE' AND  EXTRACT(MONTH FROM s.created_on) =:month   AND (select count (*) from tbl_cheques c where c.stockist_id = s.stockist_id and c.sap_id = sm.sap_id and c.status ='INWARD'  and c.ischequehold='false' )<CAST(v.value AS bigint) GROUP BY s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category, sm.threshold, s.city_id ,s.stockist_id,sm.location ", nativeQuery = true)
	public List<Object[]> thresholdLimitInActiveSuperMonth(@Param(value = "tenantId") String tenantId, int month);

	@Query(value = "SELECT s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category, c.cheque_number, COALESCE(SUM(CASE WHEN c.sap_id = sm.sap_id AND s.stockist_id = sm.stockist_id AND c.status = 'INWARD' THEN 1 ELSE 0 END), 0) AS total, s.city_id, b.name AS bankName, (SELECT b.name FROM tbl_cheques c LEFT JOIN tbl_bank b ON c.bank_id = b.code WHERE c.tenant_id=:tenantId AND c.stockist_id = s.stockist_id AND c.sap_id = sm.sap_id AND c.status = 'SECURITY' LIMIT 1) AS security, sm.location FROM tbl_stockist s LEFT JOIN tbl_stockist_manufacture sm ON s.stockist_id = sm.stockist_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = sm.manufacture AND s.tenant_id=tm.tenant_id LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = sm.manufacture LEFT JOIN tbl_cheques c ON s.stockist_id = c.stockist_id AND c.sap_id = sm.sap_id LEFT JOIN tbl_manager_manufacturer_mapping mp ON mp.manufacturerid = sm.manufacture AND sm.tenant_id=mp.tenant_id LEFT JOIN tbl_bank b ON c.bank_id = b.code LEFT JOIN tbl_city ct ON ct.city_code = s.city_id WHERE tm.status = 'ACTIVE' AND m.status = 'ACTIVE' AND s.status = 'ACTIVE' AND c.status = 'INWARD' AND s.tenant_id=:tenantId  AND b.code NOT IN (SELECT c.bank_id FROM tbl_cheques c WHERE c.stockist_id = s.stockist_id AND c.sap_id = sm.sap_id AND c.status = 'SECURITY' AND c.tenant_id=:tenantId) AND (SELECT b.name FROM tbl_cheques c LEFT JOIN tbl_bank b ON c.bank_id = b.code WHERE c.stockist_id = s.stockist_id AND c.sap_id = sm.sap_id AND c.status = 'SECURITY' LIMIT 1) IS NOT NULL GROUP BY s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category, s.city_id, b.name, security, c.cheque_number, sm.location ", nativeQuery = true)
	public List<Object[]> securityTooutWardSuper(@Param(value = "tenantId") String tenantId);

	@Query(value = "SELECT s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category, c.cheque_number, COALESCE(SUM(CASE WHEN c.sap_id = sm.sap_id AND s.stockist_id = sm.stockist_id AND c.status = 'INWARD' THEN 1 ELSE 0 END), 0) AS total, s.city_id, b.name AS bankName, (SELECT b.name FROM tbl_cheques c LEFT JOIN tbl_bank b ON c.bank_id = b.code WHERE c.tenant_id=:tenantId AND c.stockist_id = s.stockist_id AND c.sap_id = sm.sap_id AND c.status = 'SECURITY' LIMIT 1) AS security, sm.location FROM tbl_stockist s LEFT JOIN tbl_stockist_manufacture sm ON s.stockist_id = sm.stockist_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = sm.manufacture AND s.tenant_id=tm.tenant_id LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = sm.manufacture LEFT JOIN tbl_cheques c ON s.stockist_id = c.stockist_id AND c.sap_id = sm.sap_id LEFT JOIN tbl_manager_manufacturer_mapping mp ON mp.manufacturerid = sm.manufacture AND sm.tenant_id=mp.tenant_id LEFT JOIN tbl_bank b ON c.bank_id = b.code LEFT JOIN tbl_city ct ON ct.city_code = s.city_id WHERE tm.status = 'ACTIVE' AND m.status = 'ACTIVE' AND s.status = 'INACTIVE' AND c.status = 'INWARD' AND s.tenant_id=:tenantId AND b.code NOT IN (SELECT c.bank_id FROM tbl_cheques c WHERE c.stockist_id = s.stockist_id AND c.sap_id = sm.sap_id AND c.status = 'SECURITY' AND c.tenant_id=:tenantId) AND (SELECT b.name FROM tbl_cheques c LEFT JOIN tbl_bank b ON c.bank_id = b.code WHERE c.stockist_id = s.stockist_id AND c.sap_id = sm.sap_id AND c.status = 'SECURITY' LIMIT 1) IS NOT NULL GROUP BY s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category, s.city_id, b.name, security, c.cheque_number, sm.location ", nativeQuery = true)
	public List<Object[]> securityTooutWardInActiveSuper(@Param(value = "tenantId") String tenantId);

	@Query(value = "SELECT  s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category, COALESCE(SUM(CASE WHEN c.sap_id = sm.sap_id and c.stockist_id = sm.stockist_id AND c.status ='SECURITY' THEN 1 ELSE 0 END), 0) AS total, s.city_id,sm.location FROM tbl_stockist s LEFT JOIN tbl_stockist_manufacture sm ON s.stockist_id = sm.stockist_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = sm.manufacture and s.tenant_id=tm.tenant_id LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = sm.manufacture LEFT JOIN tbl_cheques c ON s.stockist_id = c.stockist_id  LEFT JOIN tbl_city ct ON ct.city_code=s.city_id WHERE  s.tenant_id=:tenantId  AND  tm.status = 'ACTIVE' AND m.status = 'ACTIVE' AND s.status = 'ACTIVE'  GROUP BY s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category, s.city_id,sm.location HAVING COALESCE(SUM(CASE WHEN c.sap_id = sm.sap_id AND c.stockist_id=sm.stockist_id AND c.status ='SECURITY' THEN 1 ELSE 0 END), 0) = 0", nativeQuery = true)
	public List<Object[]> noSecuritChequesSuper(@Param(value = "tenantId") String tenantId);

	@Query(value = "SELECT  s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category, COALESCE(SUM(CASE WHEN c.sap_id = sm.sap_id and c.stockist_id = sm.stockist_id AND c.status ='SECURITY' THEN 1 ELSE 0 END), 0) AS total, s.city_id,sm.location FROM tbl_stockist s LEFT JOIN tbl_stockist_manufacture sm ON s.stockist_id = sm.stockist_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = sm.manufacture and s.tenant_id=tm.tenant_id LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = sm.manufacture LEFT JOIN tbl_cheques c ON s.stockist_id = c.stockist_id  LEFT JOIN tbl_city ct ON ct.city_code=s.city_id WHERE  s.tenant_id=:tenantId  AND  tm.status = 'ACTIVE' AND m.status = 'ACTIVE' AND s.status = 'ACTIVE'  AND EXTRACT(MONTH FROM s.created_on) =:month  GROUP BY s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category, s.city_id,sm.location HAVING COALESCE(SUM(CASE WHEN c.sap_id = sm.sap_id AND c.stockist_id=sm.stockist_id AND c.status ='SECURITY' THEN 1 ELSE 0 END), 0) = 0", nativeQuery = true)
	public List<Object[]> noSecuritChequesSuperMonth(@Param(value = "tenantId") String tenantId, int month);

	@Query(value = "SELECT  s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category, COALESCE(SUM(CASE WHEN c.sap_id = sm.sap_id and c.stockist_id = sm.stockist_id AND c.status ='SECURITY' THEN 1 ELSE 0 END), 0) AS total, s.city_id,sm.location FROM tbl_stockist s LEFT JOIN tbl_stockist_manufacture sm ON s.stockist_id = sm.stockist_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = sm.manufacture and s.tenant_id=tm.tenant_id LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = sm.manufacture LEFT JOIN tbl_cheques c ON s.stockist_id = c.stockist_id  LEFT JOIN tbl_city ct ON ct.city_code=s.city_id WHERE  s.tenant_id=:tenantId  AND  tm.status = 'ACTIVE' AND m.status = 'ACTIVE' AND s.status = 'INACTIVE'  GROUP BY s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category, s.city_id,sm.location HAVING COALESCE(SUM(CASE WHEN c.sap_id = sm.sap_id AND c.stockist_id=sm.stockist_id AND c.status ='SECURITY' THEN 1 ELSE 0 END), 0) = 0", nativeQuery = true)
	public List<Object[]> noSecuritChequesInactiveSuper(@Param(value = "tenantId") String tenantId);

	@Query(value = "SELECT  s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category, COALESCE(SUM(CASE WHEN c.sap_id = sm.sap_id and c.stockist_id = sm.stockist_id AND c.status ='SECURITY' THEN 1 ELSE 0 END), 0) AS total, s.city_id,sm.location FROM tbl_stockist s LEFT JOIN tbl_stockist_manufacture sm ON s.stockist_id = sm.stockist_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = sm.manufacture and s.tenant_id=tm.tenant_id LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = sm.manufacture LEFT JOIN tbl_cheques c ON s.stockist_id = c.stockist_id  LEFT JOIN tbl_city ct ON ct.city_code=s.city_id WHERE  s.tenant_id=:tenantId  AND  tm.status = 'ACTIVE' AND m.status = 'ACTIVE' AND s.status = 'INACTIVE'  AND EXTRACT(MONTH FROM s.created_on) =:month  GROUP BY s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category, s.city_id,sm.location HAVING COALESCE(SUM(CASE WHEN c.sap_id = sm.sap_id AND c.stockist_id=sm.stockist_id AND c.status ='SECURITY' THEN 1 ELSE 0 END), 0) = 0", nativeQuery = true)
	public List<Object[]> noSecuritChequesInactiveSuperMonth(@Param(value = "tenantId") String tenantId, int month);

	@Query(value = "SELECT DISTINCT inv.invoice_number, inv.created_on, s.stockist_name, m.manufacturer_name, inv.delivery_date, inv.due_date, CASE WHEN inv.delivery_date > inv.due_date THEN 'Yes' ELSE 'No' END AS overdue, EXTRACT(DAY FROM AGE(CURRENT_TIMESTAMP, inv.delivery_date)) AS days_taken,sm.location,s.city_id FROM tbl_ticket_order_invoice inv LEFT JOIN tbl_ticket t ON t.ticket_id = inv.ticket_id LEFT JOIN tbl_stockist s ON s.stockist_id = t.stockist_id LEFT JOIN tbl_stockist_manufacture sm ON sm.stockist_id = t.stockist_id AND sm.manufacture = t.manufacturer_id LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = t.manufacturer_id LEFT JOIN tbl_cheques c ON c.stockist_id = sm.stockist_id AND c.sap_id = sm.sap_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = t.manufacturer_id  WHERE inv.tenant_id =:tenantId  AND inv.status IN ('DELIVERED','POD RECEIVED') AND m.status = 'ACTIVE' AND tm.status = 'ACTIVE' and inv.cheque_status=false AND (c.status IS NULL OR c.status != 'OUTWARD' OR c.status = 'INWARD' OR c.status = 'SECURITY') ", nativeQuery = true)
	public List<Object[]> paymentReceivedSuper(@Param(value = "tenantId") String tenantId);

	@Query(value = "SELECT DISTINCT inv.invoice_number, inv.created_on, s.stockist_name, m.manufacturer_name, inv.delivery_date, inv.due_date, CASE WHEN inv.delivery_date > inv.due_date THEN 'Yes' ELSE 'No' END AS overdue, EXTRACT(DAY FROM AGE(CURRENT_TIMESTAMP, inv.delivery_date)) AS days_taken,sm.location,s.city_id FROM tbl_ticket_order_invoice inv LEFT JOIN tbl_ticket t ON t.ticket_id = inv.ticket_id LEFT JOIN tbl_stockist s ON s.stockist_id = t.stockist_id LEFT JOIN tbl_stockist_manufacture sm ON sm.stockist_id = t.stockist_id AND sm.manufacture = t.manufacturer_id LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = t.manufacturer_id LEFT JOIN tbl_cheques c ON c.stockist_id = sm.stockist_id AND c.sap_id = sm.sap_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = t.manufacturer_id  WHERE inv.tenant_id =:tenantId  AND inv.status IN ('DELIVERED','POD RECEIVED') AND m.status = 'ACTIVE' AND tm.status = 'ACTIVE' and inv.cheque_status=false AND (c.status IS NULL OR c.status != 'OUTWARD' OR c.status = 'INWARD' OR c.status = 'SECURITY')   AND EXTRACT(MONTH FROM inv.created_on) =:month ", nativeQuery = true)
	public List<Object[]> paymentReceivedSuperMonth(@Param(value = "tenantId") String tenantId, int month);

	@Query(value = "SELECT  s.stockist_name, s.city_id, b.name, c.cheque_number, c.status, c.ischequehold, m.manufacturer_name, sm.sap_id,sm.cheque_category, c.recive_date, c.recived_via,c.deposit_date, c.invoice, c.invoice_amount,  c.adjustedinvoices, c.amount, c.dtscndn, c.dtscndnamount,c.remarks,sm.location FROM tbl_stockist s LEFT JOIN tbl_stockist_manufacture sm ON s.stockist_id = sm.stockist_id LEFT JOIN tbl_cheques c ON s.stockist_id = c.stockist_id AND c.sap_id = sm.sap_id LEFT JOIN tbl_bank b ON c.bank_id = b.code LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = sm.manufacture LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = sm.manufacture  WHERE  s.tenant_id = :tenantId  AND tm.status = 'ACTIVE' AND m.status = 'ACTIVE' AND ischequehold=false AND s.status = 'ACTIVE' AND b.name ILIKE %:bankName% AND s.city_id ILIKE %:location% AND c.cheque_number ILIKE %:chequeNumber% AND c.status ILIKE %:status% GROUP BY s.stockist_name, s.city_id, b.name, c.cheque_number, c.status, c.ischequehold, m.manufacturer_name, sm.sap_id,sm.cheque_category, c.recive_date, c.recived_via,c.deposit_date, c.invoice, c.invoice_amount,  c.adjustedinvoices, c.amount, c.dtscndn, c.dtscndnamount,c.remarks,sm.location", nativeQuery = true)

	public List<Object[]> chequeStatusReportInHandSuper(@Param("tenantId") String tenantId,
			@Param("bankName") String bankName, @Param("location") String location,
			@Param("chequeNumber") String chequeNumber, @Param("status") String status);

	@Query(value = "SELECT  s.stockist_name, s.city_id, b.name, c.cheque_number, c.status, c.ischequehold, m.manufacturer_name, sm.sap_id,sm.cheque_category, c.recive_date, c.recived_via,c.deposit_date, c.invoice, c.invoice_amount,  c.adjustedinvoices, c.amount, c.dtscndn, c.dtscndnamount,c.remarks,sm.location FROM tbl_stockist s LEFT JOIN tbl_stockist_manufacture sm ON s.stockist_id = sm.stockist_id LEFT JOIN tbl_cheques c ON s.stockist_id = c.stockist_id AND c.sap_id = sm.sap_id LEFT JOIN tbl_bank b ON c.bank_id = b.code LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = sm.manufacture LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = sm.manufacture  WHERE  s.tenant_id = :tenantId  AND tm.status = 'ACTIVE' AND m.status = 'ACTIVE' AND ischequehold=true AND s.status = 'ACTIVE' AND b.name ILIKE %:bankName% AND s.city_id ILIKE %:location% AND c.cheque_number ILIKE %:chequeNumber% AND c.status ILIKE %:status% GROUP BY s.stockist_name, s.city_id, b.name, c.cheque_number, c.status, c.ischequehold, m.manufacturer_name, sm.sap_id,sm.cheque_category, c.recive_date, c.recived_via,c.deposit_date, c.invoice, c.invoice_amount,  c.adjustedinvoices, c.amount, c.dtscndn, c.dtscndnamount,c.remarks,sm.location", nativeQuery = true)

	public List<Object[]> chequeStatusReportOnHoldSuper(@Param("tenantId") String tenantId,
			@Param("bankName") String bankName, @Param("location") String location,
			@Param("chequeNumber") String chequeNumber, @Param("status") String status);

	@Query(value = "SELECT  s.stockist_name, s.city_id, b.name, c.cheque_number, c.status, c.ischequehold, m.manufacturer_name, sm.sap_id,sm.cheque_category, c.recive_date, c.recived_via,c.deposit_date, c.invoice, c.invoice_amount,  c.adjustedinvoices, c.amount, c.dtscndn, c.dtscndnamount,c.remarks,sm.location FROM tbl_stockist s LEFT JOIN tbl_stockist_manufacture sm ON s.stockist_id = sm.stockist_id LEFT JOIN tbl_cheques c ON s.stockist_id = c.stockist_id AND c.sap_id = sm.sap_id LEFT JOIN tbl_bank b ON c.bank_id = b.code LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = sm.manufacture LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = sm.manufacture  WHERE  s.tenant_id =:tenantId  AND tm.status = 'ACTIVE' AND m.status = 'ACTIVE' AND s.status = 'ACTIVE' AND b.name ILIKE %:bankName% AND s.city_id ILIKE %:location% AND c.cheque_number ILIKE %:chequeNumber% AND c.status ILIKE %:status% GROUP BY s.stockist_name, s.city_id, b.name, c.cheque_number, c.status, c.ischequehold, m.manufacturer_name, sm.sap_id,sm.cheque_category, c.recive_date, c.recived_via,c.deposit_date, c.invoice, c.invoice_amount,  c.adjustedinvoices, c.amount, c.dtscndn, c.dtscndnamount,c.remarks,sm.location", nativeQuery = true)

	public List<Object[]> chequeStatusReportSuper(@Param("tenantId") String tenantId,
			@Param("bankName") String bankName, @Param("location") String location,
			@Param("chequeNumber") String chequeNumber, @Param("status") String status);

	@Query(value = "SELECT  s.stockist_name, s.city_id, b.name, c.cheque_number, c.status, c.ischequehold, m.manufacturer_name, sm.sap_id,sm.cheque_category, c.recive_date, c.recived_via,c.deposit_date, c.invoice, c.invoice_amount,  c.adjustedinvoices, c.amount, c.dtscndn, c.dtscndnamount,c.remarks,sm.location FROM tbl_stockist s LEFT JOIN tbl_stockist_manufacture sm ON s.stockist_id = sm.stockist_id LEFT JOIN tbl_cheques c ON s.stockist_id = c.stockist_id AND c.sap_id = sm.sap_id LEFT JOIN tbl_bank b ON c.bank_id = b.code LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = sm.manufacture LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = sm.manufacture  WHERE  s.tenant_id =:tenantId  AND tm.status = 'ACTIVE' AND m.status = 'ACTIVE' AND ischequehold=false AND s.status = 'INACTIVE' AND b.name ILIKE %:bankName% AND s.city_id ILIKE %:location% AND c.cheque_number ILIKE %:chequeNumber% AND c.status ILIKE %:status% GROUP BY s.stockist_name, s.city_id, b.name, c.cheque_number, c.status, c.ischequehold, m.manufacturer_name, sm.sap_id,sm.cheque_category, c.recive_date, c.recived_via,c.deposit_date, c.invoice, c.invoice_amount,  c.adjustedinvoices, c.amount, c.dtscndn, c.dtscndnamount,c.remarks,sm.location", nativeQuery = true)

	public List<Object[]> chequeStatusReportInHandInActiveSuper(@Param("tenantId") String tenantId,
			@Param("bankName") String bankName, @Param("location") String location,
			@Param("chequeNumber") String chequeNumber, @Param("status") String status);

	@Query(value = "SELECT  s.stockist_name, s.city_id, b.name, c.cheque_number, c.status, c.ischequehold, m.manufacturer_name, sm.sap_id,sm.cheque_category, c.recive_date, c.recived_via,c.deposit_date, c.invoice, c.invoice_amount,  c.adjustedinvoices, c.amount, c.dtscndn, c.dtscndnamount,c.remarks,sm.location FROM tbl_stockist s LEFT JOIN tbl_stockist_manufacture sm ON s.stockist_id = sm.stockist_id LEFT JOIN tbl_cheques c ON s.stockist_id = c.stockist_id AND c.sap_id = sm.sap_id LEFT JOIN tbl_bank b ON c.bank_id = b.code LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = sm.manufacture LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = sm.manufacture  WHERE  s.tenant_id = :tenantId  AND tm.status = 'ACTIVE' AND m.status = 'ACTIVE' AND ischequehold=true AND s.status = 'INACTIVE' AND b.name ILIKE %:bankName% AND s.city_id ILIKE %:location% AND c.cheque_number ILIKE %:chequeNumber% AND c.status ILIKE %:status% GROUP BY s.stockist_name, s.city_id, b.name, c.cheque_number, c.status, c.ischequehold, m.manufacturer_name, sm.sap_id,sm.cheque_category, c.recive_date, c.recived_via,c.deposit_date, c.invoice, c.invoice_amount,  c.adjustedinvoices, c.amount, c.dtscndn, c.dtscndnamount,c.remarks,sm.location", nativeQuery = true)

	public List<Object[]> chequeStatusReportOnHoldInActiveSuper(@Param("tenantId") String tenantId,
			@Param("bankName") String bankName, @Param("location") String location,
			@Param("chequeNumber") String chequeNumber, @Param("status") String status);

	@Query(value = "SELECT  s.stockist_name, s.city_id, b.name, c.cheque_number, c.status, c.ischequehold, m.manufacturer_name, sm.sap_id,sm.cheque_category, c.recive_date, c.recived_via,c.deposit_date, c.invoice, c.invoice_amount,  c.adjustedinvoices, c.amount, c.dtscndn, c.dtscndnamount,c.remarks,sm.location FROM tbl_stockist s LEFT JOIN tbl_stockist_manufacture sm ON s.stockist_id = sm.stockist_id LEFT JOIN tbl_cheques c ON s.stockist_id = c.stockist_id AND c.sap_id = sm.sap_id LEFT JOIN tbl_bank b ON c.bank_id = b.code LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = sm.manufacture LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = sm.manufacture  WHERE  s.tenant_id = :tenantId  AND tm.status = 'ACTIVE' AND m.status = 'ACTIVE' AND s.status = 'INACTIVE' AND b.name ILIKE %:bankName% AND s.city_id ILIKE %:location% AND c.cheque_number ILIKE %:chequeNumber% AND c.status ILIKE %:status% GROUP BY s.stockist_name, s.city_id, b.name, c.cheque_number, c.status, c.ischequehold, m.manufacturer_name, sm.sap_id,sm.cheque_category, c.recive_date, c.recived_via,c.deposit_date, c.invoice, c.invoice_amount,  c.adjustedinvoices, c.amount, c.dtscndn, c.dtscndnamount,c.remarks,sm.location", nativeQuery = true)

	public List<Object[]> chequeStatusReportInactiveSuper(@Param("tenantId") String tenantId,
			@Param("bankName") String bankName, @Param("location") String location,
			@Param("chequeNumber") String chequeNumber, @Param("status") String status);

	@Query(value = "SELECT s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category, (select count (*) from tbl_cheques c where c.stockist_id = sm.stockist_id and c.sap_id = sm.sap_id and c.status ='INWARD' and c.ischequehold='false' )  AS total, s.city_id ,(select count (*) from tbl_cheques c where c.stockist_id = sm.stockist_id and c.sap_id = sm.sap_id and c.status ='INWARD' and c.ischequehold='true' )  AS is_cheque_hold,sm.location FROM tbl_stockist s LEFT JOIN tbl_stockist_manufacture sm ON s.stockist_id = sm.stockist_id left join tbl_tenant_manufacture tm ON tm.manufacturer_id = sm.manufacture and s.tenant_id=tm.tenant_id left join tbl_manufacturer m ON m.manufacturer_id = sm.manufacture LEFT JOIN tbl_cheques c ON s.stockist_id = c.stockist_id  left join tbl_city ct ON ct.city_code=s.city_id WHERE  s.tenant_id = :tenantId   and tm.status = 'ACTIVE' and m.status = 'ACTIVE' and s.status = 'ACTIVE'  and c.status LIKE %:status% GROUP BY s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category,s.city_id,is_cheque_hold,s.stockist_id,sm.location,sm.stockist_id", nativeQuery = true)

	public List<Object[]> chequeInHandReportActiveAdvanceSuper(@Param(value = "tenantId") String tenantId,
			@Param(value = "status") String status);

	@Query(value = "SELECT s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category, (select count (*) from tbl_cheques c where c.stockist_id = sm.stockist_id and c.sap_id = sm.sap_id and c.status ='INWARD' and c.ischequehold='false' )  AS total, s.city_id ,(select count (*) from tbl_cheques c where c.stockist_id = sm.stockist_id and c.sap_id = sm.sap_id and c.status ='INWARD' and c.ischequehold='true' )  AS is_cheque_hold,sm.location FROM tbl_stockist s LEFT JOIN tbl_stockist_manufacture sm ON s.stockist_id = sm.stockist_id left join tbl_tenant_manufacture tm ON tm.manufacturer_id = sm.manufacture and s.tenant_id=tm.tenant_id left join tbl_manufacturer m ON m.manufacturer_id = sm.manufacture LEFT JOIN tbl_cheques c ON s.stockist_id = c.stockist_id  left join tbl_city ct ON ct.city_code=s.city_id WHERE  s.tenant_id = :tenantId  and tm.status = 'ACTIVE' and m.status = 'ACTIVE'  and s.status = :stockistStatus and c.status LIKE %:status% GROUP BY s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category,s.city_id,is_cheque_hold,s.stockist_id,sm.location,sm.stockist_id", nativeQuery = true)

	public List<Object[]> chequeInHandReportActiveInwardSuper(@Param(value = "tenantId") String tenantId,
			@Param(value = "status") String status, @Param(value = "stockistStatus") String stockistStatus);

	@Query(value = "SELECT s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category, (SELECT COUNT(*) FROM tbl_cheques c LEFT JOIN tbl_bank b ON b.code = c.bank_id WHERE c.stockist_id = sm.stockist_id AND c.sap_id = sm.sap_id AND b.status = 'ACTIVE' AND c.isreturned = false AND c.status = 'SECURITY' AND b.status = 'ACTIVE') AS total , s.city_id ,(SELECT COALESCE(SUM(1), 0) FROM tbl_cheques c LEFT JOIN tbl_bank bk ON bk.code = c.bank_id WHERE c.sap_id = sm.sap_id AND s.stockist_id =sm.stockist_id AND  c.ischequehold='true' AND c.status ='SECURITY' AND bk.status = 'ACTIVE')  AS is_cheque_hold,sm.location FROM tbl_stockist s LEFT JOIN tbl_stockist_manufacture sm ON s.stockist_id = sm.stockist_id left join tbl_tenant_manufacture tm ON tm.manufacturer_id = sm.manufacture and s.tenant_id=tm.tenant_id left join tbl_manufacturer m ON m.manufacturer_id = sm.manufacture LEFT JOIN tbl_cheques c ON s.stockist_id = c.stockist_id  left join tbl_city ct ON ct.city_code=s.city_id WHERE  s.tenant_id = :tenantId  and tm.status = 'ACTIVE' and m.status = 'ACTIVE' and s.status = 'ACTIVE'  and c.status LIKE %:status% GROUP BY s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category,s.city_id,is_cheque_hold,s.stockist_id,sm.location,sm.stockist_id", nativeQuery = true)

	public List<Object[]> chequeInHandReportSecuritySuper(@Param(value = "tenantId") String tenantId,
			@Param(value = "status") String status);

	@Query(value = "SELECT s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category, (SELECT COUNT(*) FROM tbl_cheques c LEFT JOIN tbl_bank b ON b.code = c.bank_id WHERE c.stockist_id = sm.stockist_id AND c.sap_id = sm.sap_id AND b.status = 'ACTIVE' AND c.isreturned = false AND c.status = 'SECURITY' AND b.status = 'ACTIVE') AS total , s.city_id, (SELECT COALESCE(SUM(1), 0) FROM tbl_cheques c LEFT JOIN tbl_bank bk ON bk.code = c.bank_id WHERE c.sap_id = sm.sap_id AND s.stockist_id =sm.stockist_id AND  c.ischequehold='true' AND c.status ='SECURITY' AND bk.status = 'ACTIVE') AS  is_cheque_hold,sm.location FROM tbl_stockist s LEFT JOIN tbl_stockist_manufacture sm ON s.stockist_id = sm.stockist_id left join tbl_tenant_manufacture tm ON tm.manufacturer_id = sm.manufacture and s.tenant_id=tm.tenant_id left join tbl_manufacturer m ON m.manufacturer_id = sm.manufacture LEFT JOIN tbl_cheques c ON s.stockist_id = c.stockist_id left join tbl_city ct ON ct.city_code=s.city_id WHERE s.tenant_id = :tenantId  and  tm.status = 'ACTIVE' and m.status = 'ACTIVE'  and c.status ILIKE %:status% and s.status = :stockistStatus GROUP BY s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category,s.city_id,is_cheque_hold,s.stockist_id,sm.location,sm.stockist_id", nativeQuery = true)
	public List<Object[]> chequeInHandReportActiveSecuritySuper(@Param(value = "tenantId") String tenantId,
			@Param(value = "status") String status, @Param(value = "stockistStatus") String stockistStatus);

	@Query(value = "SELECT DISTINCT s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category,(select count (*) from tbl_cheques c where c.stockist_id = s.stockist_id and c.sap_id = sm.sap_id and c.status ='INWARD' and c.ischequehold='false' ) AS total, s.city_id,(select count (*) from tbl_cheques c where c.stockist_id = s.stockist_id and c.sap_id = sm.sap_id and c.status ='INWARD' and c.ischequehold='true' )   As hold,sm.location  FROM tbl_stockist s LEFT JOIN tbl_stockist_manufacture sm ON s.stockist_id = sm.stockist_id left join tbl_tenant_manufacture tm ON tm.manufacturer_id = sm.manufacture left join tbl_manufacturer m ON m.manufacturer_id = sm.manufacture LEFT JOIN tbl_cheques c ON s.stockist_id = c.stockist_id   left join tbl_city ct ON ct.city_code=s.city_id WHERE   s.tenant_id = :tenantId  and tm.status = 'ACTIVE'  and m.status = 'ACTIVE' and s.status = 'INACTIVE' GROUP BY s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category,s.city_id,c.ischequehold,s.stockist_id,sm.location", nativeQuery = true)
	public List<Object[]> chequeDetailsReportInActiveSuper(@Param("tenantId") String tenantId);

	@Query(value = "SELECT DISTINCT s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category,(select count (*) from tbl_cheques c where c.stockist_id = s.stockist_id and c.sap_id = sm.sap_id and c.status ='INWARD' and c.ischequehold='false' ) AS total, s.city_id,(select count (*) from tbl_cheques c where c.stockist_id = s.stockist_id and c.sap_id = sm.sap_id and c.status ='INWARD' and c.ischequehold='true' )   As hold,sm.location  FROM tbl_stockist s LEFT JOIN tbl_stockist_manufacture sm ON s.stockist_id = sm.stockist_id left join tbl_tenant_manufacture tm ON tm.manufacturer_id = sm.manufacture left join tbl_manufacturer m ON m.manufacturer_id = sm.manufacture LEFT JOIN tbl_cheques c ON s.stockist_id = c.stockist_id   left join tbl_city ct ON ct.city_code=s.city_id WHERE  s.tenant_id = :tenantId   and tm.status = 'ACTIVE'  and m.status = 'ACTIVE' and s.status = 'ACTIVE' GROUP BY s.stockist_name, m.manufacturer_name, sm.sap_id, sm.cheque_category,s.city_id,c.ischequehold,s.stockist_id,sm.location", nativeQuery = true)
	public List<Object[]> chequeDetailsReportSuper(@Param("tenantId") String tenantId);

	@Query(value = "SELECT COUNT(*) FROM (SELECT s.stockist_id FROM tbl_stockist s LEFT JOIN tbl_stockist_manufacture sm ON s.stockist_id = sm.stockist_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = sm.manufacture AND s.tenant_id = tm.tenant_id LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = sm.manufacture LEFT JOIN tbl_cheques c ON s.stockist_id = c.stockist_id AND c.sap_id = sm.sap_id AND c.status = 'INWARD' AND c.ischequehold = 'false' LEFT JOIN tbl_city ct ON ct.city_code = s.city_id LEFT JOIN list_value_values v ON v.code = sm.cheque_category WHERE s.tenant_id = :tenantId AND tm.status = 'ACTIVE' AND m.status = 'ACTIVE' AND s.status = 'ACTIVE' AND sm.manufacture ILIKE %:id% GROUP BY s.stockist_id, sm.sap_id, v.value HAVING COUNT(c.*) < CAST(v.value AS bigint)) AS subquery", nativeQuery = true)
	public List<Object[]> thresholdLimitSuper(@Param(value = "tenantId") String tenantId, String id);

	@Query(value = "SELECT COUNT(*) FROM (SELECT sm.sap_id FROM tbl_stockist_manufacture sm LEFT JOIN tbl_stockist s ON s.stockist_id = sm.stockist_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = sm.manufacture AND s.tenant_id = tm.tenant_id LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = sm.manufacture LEFT JOIN tbl_cheques c ON s.stockist_id = c.stockist_id WHERE s.tenant_id = :tenantId AND tm.status = 'ACTIVE' AND m.status = 'ACTIVE' AND s.status = 'ACTIVE' AND sm.manufacture ILIKE  %:id%  GROUP BY sm.sap_id HAVING COALESCE(SUM(CASE WHEN c.sap_id = sm.sap_id AND c.status = 'SECURITY' THEN 1 ELSE 0 END), 0) = 0) AS subquery ", nativeQuery = true)
	public List<Object[]> noSecuritChequesSuper(@Param(value = "tenantId") String tenantId, String id);

	@Query(value = "SELECT stockist, manufacture, location, bankname, chequenumber, status, manufacturername, sapid, chequecategory, recivedate, recivedvia, depositdate, invoice, invoiceamount, adjustedinvoices, amount, dtscndn, dtscndnamount, remarks, locality, stockiststatus, tennatid, userid from chequehistorysuper where tennatid =:tenantId and stockiststatus='ACTIVE' and bankname  ILIKE %:bankName% and chequenumber ILIKE %:chequeNumber% and status ILIKE %:chequeStatus% and location ILIKE %:location%", nativeQuery = true)
	public List<ChequeHistory> chequeStatusReportSuperAdmin(String tenantId, String bankName, String location,
			String chequeNumber, String chequeStatus);

	@Query(value = "SELECT stockist, manufacture, location, bankname, chequenumber, status, manufacturername, sapid, chequecategory, recivedate, recivedvia, depositdate, invoice, invoiceamount, adjustedinvoices, amount, dtscndn, dtscndnamount, remarks, locality, stockiststatus, tennatid, userid from chequehistorysuper where tennatid =:tenantId and stockiststatus='INACTIVE' and  bankname  ILIKE %:bankName% and chequenumber ILIKE %:chequeNumber% and status ILIKE %:chequeStatus% and location ILIKE %:location%", nativeQuery = true)
	public List<ChequeHistory> chequeStatusReportSuperAdminInActive(String tenantId, String bankName, String location,
			String chequeNumber, String chequeStatus);

	@Query(value = "SELECT stockist, manufacture, location, bankname, chequenumber, status, manufacturername, sapid, chequecategory, recivedate, recivedvia, depositdate, invoice, invoiceamount, adjustedinvoices, amount, dtscndn, dtscndnamount, remarks, locality, stockiststatus, tennatid, userid from chequehistory where tennatid =:tenantId and userid=:userId and  stockiststatus='ACTIVE'  and  bankname  ILIKE %:bankName% and chequenumber ILIKE %:chequeNumber% and status ILIKE %:chequeStatus% and location ILIKE %:location%", nativeQuery = true)
	public List<ChequeHistory> chequeStatusReportManUser(String tenantId, String userId, String bankName,
			String location, String chequeNumber, String chequeStatus);

	@Query(value = "SELECT stockist, manufacture, location, bankname, chequenumber, status, manufacturername, sapid, chequecategory, recivedate, recivedvia, depositdate, invoice, invoiceamount, adjustedinvoices, amount, dtscndn, dtscndnamount, remarks, locality, stockiststatus, tennatid, userid from chequehistory where tennatid =:tenantId and userid=:userId and stockiststatus='INACTIVE' and  bankname  ILIKE %:bankName% and chequenumber ILIKE %:chequeNumber% and status ILIKE %:chequeStatus% and location ILIKE %:location%", nativeQuery = true)
	public List<ChequeHistory> chequeStatusReportManUserInActive(String tenantId, String userId, String bankName,
			String location, String chequeNumber, String chequeStatus);

}
