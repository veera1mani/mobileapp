package com.healthtraze.etraze.api.masters.repository;

import java.util.Date;
import java.util.List;
import java.util.Optional;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;

import com.healthtraze.etraze.api.base.repository.BaseRepository;
import com.healthtraze.etraze.api.masters.model.Ticket;

@Repository
public interface TicketRepository extends BaseRepository<Ticket, String> {


    @Query(value = "select * from tbl_ticket where tenant_id = :tenantId And ticket_id=:ticketId", nativeQuery = true)
    Optional<Ticket> getTicketsByTenant(@Param("ticketId") String ticketId,@Param("tenantId") String tenantId);

    @Query(value = "select * from tbl_ticket where tenant_id = :tenantId   And (type != 'order' or type is null or type='' ) And status ILIKE %:status%", nativeQuery = true)
    List<Ticket> getAllTicketsByTenant(@Param("tenantId") String tenantId, @Param("status") String status);

    @Query(value = "select * from tbl_ticket where tenant_id = :tenantId  And (type != 'order' or type is null or type='' ) And  status ILIKE %:status% AND (ticket_id ILIKE %:search% OR subject ILIKE %:search% OR CAST(created_on AS TEXT) ILIKE %:search% OR emailed_by ILIKE %:search% OR type ILIKE %:search% OR assigned_to ILIKE %:search%)", nativeQuery = true)
    List<Ticket> getAllTicketsByTenant(@Param("tenantId") String tenantId, @Param("status") String status,
            @Param("search") String search, Pageable pageable);


    @Query(value = "SELECT DISTINCT a.ticket_id, a.created_by, a.created_on, a.modified_by, a.modified_on, a.tenant_id, a.version_no, a.assigned_on, a.assigned_to, a.emailed_by, a.manufacturer, a.manufacturer_id, a.status, a.stockist_id, a.subject, a.type, a.eml, a.sent_date, a.file_path, a.created_date"
            + " FROM tbl_ticket a LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = a.manufacturer_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = a.manufacturer_id and tm.tenant_id=a.tenant_id where a.stockist_id=:stockistId AND m.status = 'ACTIVE' and tm.status='ACTIVE' And a.status ILIKE %:status%  And ( a.type is null or  a.type != 'order' ) AND a.tenant_id = :tenantId", nativeQuery = true)
    List<Ticket> getTicketsByAssignedTo(@Param("stockistId") String stockistId, @Param("status") String status,@Param("tenantId") String tenantId);
    
    
    @Query(value = "SELECT DISTINCT a.ticket_id, a.created_by, a.created_on, a.modified_by, a.modified_on, a.tenant_id, a.version_no, a.assigned_on, a.assigned_to, a.emailed_by, a.manufacturer, a.manufacturer_id, a.status, a.stockist_id, a.subject, a.type, a.eml, a.sent_date, a.file_path, a.created_date"
            + " FROM tbl_ticket a LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = a.manufacturer_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = a.manufacturer_id and tm.tenant_id = a.tenant_id  where a.stockist_id=:stockistId    AND m.status = 'ACTIVE' and tm.status='ACTIVE'  AND a.tenant_id = :tenantId  AND  ( a.type is null or  a.type != 'order' ) AND a.status ILIKE %:status% ORDER BY a.created_on DESC ", nativeQuery = true)
    List<Ticket> getTicketsByAssignedTo(@Param("stockistId") String stockistId, @Param("status") String status,Pageable pageable,@Param("tenantId") String tenantId);


    
    @Query(value = "SELECT DISTINCT a.ticket_id, a.created_by, a.created_on, a.modified_by, a.modified_on, a.tenant_id, a.version_no, a.assigned_on, a.assigned_to, a.emailed_by, a.manufacturer, a.manufacturer_id, a.status, a.stockist_id, a.subject, a.type, a.eml, a.sent_date, a.file_path,a.created_date"
            + " FROM tbl_ticket a LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = a.manufacturer_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = m.manufacturer_id And tm.tenant_id = a.tenant_id where a.assigned_to=:assignedTo  AND m.status = 'ACTIVE' and tm.status='ACTIVE' And a.status ILIKE %:status% and (a.type is null   or a.type !='order')  and"
            + "(CASE WHEN a.status = 'COMPLETED' THEN (EXTRACT(YEAR FROM a.sent_date) = EXTRACT(YEAR FROM CURRENT_DATE) AND EXTRACT(MONTH FROM a.sent_date) = EXTRACT(MONTH FROM CURRENT_DATE)) ELSE 1=1 END)  AND a.tenant_id = :tenantId", nativeQuery = true)
    List<Ticket> getTicketsByUser(@Param("assignedTo") String assignedTo, @Param("status") String status,@Param("tenantId") String tenantId);

    
    @Query(value = "SELECT DISTINCT a.ticket_id, a.created_by, a.created_on, a.modified_by, a.modified_on, a.tenant_id, a.version_no, a.assigned_on, a.assigned_to, a.emailed_by, a.manufacturer, a.manufacturer_id, a.status, a.stockist_id, a.subject, a.type, a.eml, a.sent_date, a.file_path, a.created_date"
            + " FROM tbl_ticket a LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = a.manufacturer_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = m.manufacturer_id and tm.tenant_id=a.tenant_id left join tbl_user u on a.assigned_to=u.user_id left join list_value_values v on v.code=a.type where a.assigned_to=:assignedTo and (a.type is null   or a.type !='order' ) and"
            + "(CASE WHEN a.status = 'COMPLETED' THEN (EXTRACT(YEAR FROM a.sent_date) = EXTRACT(YEAR FROM CURRENT_DATE) AND EXTRACT(MONTH FROM a.sent_date) = EXTRACT(MONTH FROM CURRENT_DATE)) ELSE 1=1 END)  AND m.status = 'ACTIVE' and tm.status='ACTIVE' AND  a.status ILIKE %:status% AND a.tenant_id = :tenantId and (a.ticket_id ILIKE %:value% OR a.emailed_by ILIKE %:value% OR  TO_CHAR(a.sent_date, 'YYYY-MM-DD')  ILIKE %:value%  OR a.status ILIKE %:value% OR a.subject ILIKE %:value% OR v.name ILIKE %:value% OR CONCAT(u.first_name, u.last_name) ILIKE %:value%) ", nativeQuery = true)
    Page<Ticket> getTicketsByUser(@Param("assignedTo") String assignedTo, @Param("status") String search,Pageable pageable,@Param("tenantId") String tenatId,String value);
    
    
    @Query(value = "select * from tbl_ticket where type='order'", nativeQuery = true)
    List<Ticket> getAllOrder();

    
    @Query("select count(status) from Ticket where status = :status and type='order'")
    public long findByStatus(@Param("status") String status);

    @Query(value = "select count(status) from tbl_ticket where status =:status And (type != 'order' or type is null or type='' )", nativeQuery = true)
    public long findByCount(@Param("status") String status);

    @Query(value = "SELECT DISTINCT a.ticket_id, a.created_by, a.created_on, a.modified_by, a.modified_on, a.tenant_id, a.version_no, a.assigned_on, a.assigned_to, a.emailed_by, a.manufacturer, a.manufacturer_id, a.status, a.stockist_id, a.subject, a.type, a.eml, a.sent_date, a.file_path, a.created_date"
            + " FROM tbl_ticket a left join  tbl_manager_manufacturer_mapping b on a.manufacturer_id =b.manufacturerid  LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = a.manufacturer_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = m.manufacturer_id left join tbl_user u on a.assigned_to=u.user_id left join list_value_values v on v.code=a.type  where b.user_id=:userId   AND a.tenant_id =:tenantId AND m.status = 'ACTIVE' and tm.status='ACTIVE' and (a.type != 'order' or a.type is null or a.type='' ) and"
            + "(CASE WHEN a.status = 'COMPLETED' THEN (EXTRACT(YEAR FROM a.sent_date) = EXTRACT(YEAR FROM CURRENT_DATE) AND EXTRACT(MONTH FROM a.sent_date) = EXTRACT(MONTH FROM CURRENT_DATE)) ELSE 1=1 END)  And a.status ILIKE %:status% and (a.ticket_id ILIKE %:value% OR  a.emailed_by ILIKE %:value% OR  TO_CHAR(a.sent_date, 'YYYY-MM-DD')  ILIKE %:value% OR a.status ILIKE %:value% OR a.subject ILIKE %:value% OR v.name ILIKE %:value% OR CONCAT(u.first_name, u.last_name) ILIKE %:value% )", nativeQuery = true)
    public Page<Ticket> getTicketByManager(@Param("userId") String userId, @Param("tenantId") String tenantId,
            @Param("status") String status, Pageable pageable,String value);


    
    @Query(value = "SELECT DISTINCT a.ticket_id, a.created_by, a.created_on, a.modified_by, a.modified_on, a.tenant_id, a.version_no, a.assigned_on, a.assigned_to, a.emailed_by, a.manufacturer, a.manufacturer_id, a.status, a.stockist_id, a.subject, a.type, a.eml, a.sent_date, a.file_path, a.created_date"
            + " FROM tbl_ticket a left join  tbl_manager_manufacturer_mapping b on a.manufacturer_id =b.manufacturerid  LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = a.manufacturer_id  LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = m.manufacturer_id And tm.tenant_id = a.tenant_id where b.user_id=:userId AND m.status = 'ACTIVE' and tm.status='ACTIVE' And a.status ILIKE %:status% And a.tenant_id =:tenantId And (a.type != 'order' or a.type is null or a.type='' ) and"	 
            + "(CASE WHEN a.status = 'COMPLETED' THEN (EXTRACT(YEAR FROM a.sent_date) = EXTRACT(YEAR FROM CURRENT_DATE) AND EXTRACT(MONTH FROM a.sent_date) = EXTRACT(MONTH FROM CURRENT_DATE)) ELSE 1=1 END)", nativeQuery = true)
    public List<Ticket> getByTicketManager(@Param("userId") String userId, @Param("status") String status,
            @Param("tenantId") String tenantId);
    
    
////    @Query(value = "SELECT DISTINCT a.ticket_id, a.created_by, a.created_on, a.modified_by, a.modified_on, a.tenant_id, a.version_no, a.assigned_on, a.assigned_to, a.emailed_by, a.manufacturer, a.manufacturer_id, a.status, a.stockist_id, a.subject, a.type, a.eml, a.sent_date FROM tbl_ticket a LEFT JOIN tbl_manager_manufacturer_mapping b ON a.manufacturer_id = b.manufacturerid LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = a.manufacturer_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = m.manufacturer_id AND tm.tenant_id = a.tenant_id left join tbl_user u on u.user_id =a.assigned_to WHERE b.user_id = :userId AND m.status = 'ACTIVE' AND tm.status = 'ACTIVE' AND a.tenant_id = :tenantId AND (a.type != 'order' OR a.type IS NULL OR a.type = '') and"
////    		+ "(CASE WHEN a.status = 'COMPLETED' THEN (EXTRACT(YEAR FROM a.sent_date) = EXTRACT(YEAR FROM CURRENT_DATE) AND EXTRACT(MONTH FROM a.sent_date) = EXTRACT(MONTH FROM CURRENT_DATE)) ELSE 1=1 END)  AND (a.ticket_id ILIKE %:search% OR a.subject ILIKE %:search% OR a.emailed_by ILIKE %:search% OR CAST(a.created_on AS TEXT) ILIKE %:search% OR  u.first_name ILIKE %:search%  OR a.type ILIKE %:search% OR a.status ILIKE %:search%)"
////            + "", nativeQuery = true)
////    public Page<Ticket> getByTicketManagerTotal(@Param("userId") String userId, 
//            @Param("tenantId") String tenantId,String search);
//    @Query(value = "SELECT DISTINCT a.ticket_id, a.created_by, a.created_on, a.modified_by, a.modified_on, a.tenant_id, a.version_no, a.assigned_on, a.assigned_to, a.emailed_by, a.manufacturer, a.manufacturer_id, a.status, a.stockist_id, a.subject, a.type, a.eml, a.sent_date FROM tbl_ticket a LEFT JOIN tbl_manager_manufacturer_mapping b ON a.manufacturer_id = b.manufacturerid LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = a.manufacturer_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = m.manufacturer_id AND tm.tenant_id = a.tenant_id left join tbl_user u on u.user_id =a.assigned_to WHERE a.assigned_to = :userId AND m.status = 'ACTIVE' AND tm.status = 'ACTIVE' AND a.tenant_id = :tenantId AND (a.type != 'order' OR a.type IS NULL OR a.type = '') and"
//    		+ "(CASE WHEN a.status = 'COMPLETED' THEN (EXTRACT(YEAR FROM a.sent_date) = EXTRACT(YEAR FROM CURRENT_DATE) AND EXTRACT(MONTH FROM a.sent_date) = EXTRACT(MONTH FROM CURRENT_DATE)) ELSE 1=1 END)  AND (a.ticket_id ILIKE %:search% OR a.subject ILIKE %:search% OR a.emailed_by ILIKE %:search% OR CAST(a.created_on AS TEXT) ILIKE %:search% OR a.type ILIKE %:search% OR a.status ILIKE %:search%)"
//            + "", nativeQuery = true)
//    public Page<Ticket> getByTicketUserTotal(@Param("userId") String userId, 
//            @Param("tenantId") String tenantId,String search);


    @Query(value = "select * from tbl_ticket t where tenant_id=:tenantId AND " + "(t.ticket_id ILIKE %:value% OR "
            + "t.subject ILIKE %:value% OR " + "CAST(t.created_on AS TEXT) ILIKE %:value% OR "
            + "t.emailed_by ILIKE %:value% OR " + "t.type ILIKE %:value% OR "
            + "t.assigned_to ILIKE %:value% ) ", nativeQuery = true)

    public List<Ticket> findByTenantId(Pageable pageable, @Param(value = "tenantId") String id, String value);

    @Query("select t from Ticket t where type='order'")
    public List<Ticket> findByType();

    
    @Query(value = "select ticket_id from tbl_ticket t where t.tenant_id=:tenantId AND t.type !='order'", nativeQuery = true)
    List<String> findAllTicketId(@Param("tenantId") String tenantId);
    
    @Query(value = "select distinct t.ticket_id,i.invoice_number from tbl_ticket_order_invoice i left join tbl_ticket t ON i.ticket_id=t.ticket_id left join tbl_tenant_manufacture tm on t.manufacturer_id =tm.manufacturer_id left join tbl_manufacturer m on t.manufacturer_id =m.manufacturer_id where t.tenant_id=:tenantId AND t.type ='order' and m.status='ACTIVE' and tm.status='ACTIVE'", nativeQuery = true)
    List<Object[]> findAllOrderId(@Param("tenantId") String tenantId);

    

    public Optional<Ticket> findByTicketId(String ticketId);


    @Query(value = "SELECT DISTINCT a.ticket_id, a.created_by, a.created_on, a.modified_by, a.modified_on, a.tenant_id, a.version_no, a.assigned_on, a.assigned_to, a.emailed_by, a.manufacturer, a.manufacturer_id, a.status, a.stockist_id, a.subject, a.type, a.eml, a.sent_date, a.file_path"
            + " FROM tbl_ticket a LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = a.manufacturer_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = m.manufacturer_id  and tm.tenant_id = a.tenant_id  where a.stockist_id=:stockistId AND m.status = 'ACTIVE' and tm.status='ACTIVE' And (a.type = 'order') AND a.tenant_id = :tenantId ", nativeQuery = true)
    List<Ticket> getOrderByAssignedTo(@Param("stockistId") String stockistId,@Param("tenantId") String tenantId);

    @Query(value = "SELECT DISTINCT a.ticket_id, a.created_by, a.created_on, a.modified_by, a.modified_on, a.tenant_id, a.version_no, a.assigned_on, a.assigned_to, a.emailed_by, a.manufacturer, a.manufacturer_id, a.status, a.stockist_id, a.subject, a.type, a.eml, a.sent_date, a.file_path"
            + " FROM tbl_ticket a LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = a.manufacturer_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = m.manufacturer_id  and tm.tenant_id = a.tenant_id where a.stockist_id=:stockistId AND (a.type = 'order' ) AND m.status = 'ACTIVE' and tm.status='ACTIVE' AND a.status ILIKE %:status% AND a.tenant_id = :tenantId", nativeQuery = true)
    List<Ticket> getOrderByAssignedTo(@Param("stockistId") String stockistId, @Param("status") String status,Pageable pageable,@Param("tenantId") String tenantId);
    
    @Query(value = "SELECT DISTINCT a.ticket_id, a.created_by, a.created_on, a.modified_by, a.modified_on, a.tenant_id, a.version_no, a.assigned_on, a.assigned_to, a.emailed_by, a.manufacturer, a.manufacturer_id, a.status, a.stockist_id, a.subject, a.type, a.eml, a.sent_date, a.file_path"
            + " FROM tbl_ticket a LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = a.manufacturer_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = m.manufacturer_id  and tm.tenant_id = a.tenant_id where a.stockist_id=:stockistId And a.status ILIKE %:status% AND m.status = 'ACTIVE' and tm.status='ACTIVE' And  ( a.type = 'order' )AND a.tenant_id = :tenantId ", nativeQuery = true)
    List<Ticket> getOrderAssignedTo(@Param("stockistId") String stockistId, @Param("status") String status,@Param("tenantId") String tenanatId);
    
    @Query(value = "SELECT DISTINCT a.ticket_id, a.created_by, a.created_on, a.modified_by, a.modified_on, a.tenant_id, a.version_no, a.assigned_on, a.assigned_to, a.emailed_by, a.manufacturer, a.manufacturer_id, a.status, a.stockist_id, a.subject, a.type, a.eml, a.sent_date, a.file_path"
            + " FROM tbl_ticket a LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = a.manufacturer_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = a.manufacturer_id and tm.tenant_id = a.tenant_id where a.assigned_to=:assignedTo and (a.type ='order' ) AND m.status = 'ACTIVE' and tm.status='ACTIVE' AND  a.status ILIKE %:status% AND a.tenant_id = :tenantId", nativeQuery = true)
    List<Ticket> getOrderByUser(@Param("assignedTo") String assignedTo, @Param("status") String status,
            Pageable pageable,@Param("tenantId") String tenanatId);
    
    @Query(value = "select distinct t.ticket_id,i.invoice_number from tbl_ticket_order_invoice i left join tbl_ticket t ON i.ticket_id=t.ticket_id left join tbl_tenant_manufacture tm on t.manufacturer_id =tm.manufacturer_id left join tbl_manufacturer m on t.manufacturer_id =m.manufacturer_id where t.assigned_to=:assignedTo AND t.tenant_id=:tenantId AND t.type ='order' and m.status='ACTIVE' and tm.status='ACTIVE'", nativeQuery = true)
    List<Object[]> getOrderIdByUser(@Param("assignedTo") String assignedTo,@Param("tenantId") String tenantId);
    
    @Query(value = "select distinct t.ticket_id,i.invoice_number from tbl_ticket_order_invoice i left join tbl_ticket t ON i.ticket_id=t.ticket_id left join tbl_tenant_manufacture tm on t.manufacturer_id =tm.manufacturer_id left join tbl_manufacturer m on t.manufacturer_id =m.manufacturer_id where t.stockist_id=:stockistId AND t.tenant_id=:tenantId AND t.type ='order' and m.status='ACTIVE' and tm.status='ACTIVE'", nativeQuery = true)
    List<Object[]> getOrderIdByStockist(@Param("stockistId") String assignedTo,@Param("tenantId") String tenantId);
    
    @Query(value = "select distinct ticket_id from tbl_ticket t  left join tbl_tenant_manufacture tm on t.manufacturer_id =tm.manufacturer_id left join tbl_manufacturer m on t.manufacturer_id =m.manufacturer_id where t.assigned_to=:assignedTo AND t.tenant_id=:tenantId AND t.type !='order' and m.status='ACTIVE' and tm.status='ACTIVE'", nativeQuery = true)
    List<String> getTicketIdByUser(@Param("assignedTo") String assignedTo,@Param("tenantId") String tenantId);
    
    @Query(value = "select distinct ticket_id from tbl_ticket t  left join tbl_tenant_manufacture tm on t.manufacturer_id =tm.manufacturer_id left join tbl_manufacturer m on t.manufacturer_id =m.manufacturer_id where t.stockist_id=:stockistId AND t.tenant_id=:tenantId AND t.type !='order' and m.status='ACTIVE' and tm.status='ACTIVE'", nativeQuery = true)
    List<String> getTicketIdByStockist(@Param("stockistId") String stockistId,@Param("tenantId") String tenantId);
    

    @Query(value = "SELECT DISTINCT a.ticket_id, a.created_by, a.created_on, a.modified_by, a.modified_on, a.tenant_id, a.version_no, a.assigned_on, a.assigned_to, a.emailed_by, a.manufacturer, a.manufacturer_id, a.status, a.stockist_id, a.subject, a.type, a.eml, a.sent_date, a.file_path"
            + " FROM tbl_ticket a LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = a.manufacturer_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = a.manufacturer_id and tm.tenant_id = a.tenant_id where a.assigned_to=:assignedTo AND m.status = 'ACTIVE' and tm.status='ACTIVE' AND  (a.type ='order' ) AND a.tenant_id  = :tenantId", nativeQuery = true)
    List<Ticket> getOrderByUser(@Param("assignedTo") String assignedTo,@Param("tenantId") String tenantId);

    @Query(value = "SELECT DISTINCT a.ticket_id, a.created_by, a.created_on, a.modified_by, a.modified_on, a.tenant_id, a.version_no, a.assigned_on, a.assigned_to, a.emailed_by, a.manufacturer, a.manufacturer_id, a.status, a.stockist_id, a.subject, a.type, a.eml, a.sent_date, a.file_path"
            + " FROM tbl_ticket a LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = a.manufacturer_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = a.manufacturer_id and tm.tenant_id = a.tenant_id where a.tenant_id = :tenantId and a.assigned_to=:assignedTo AND m.status = 'ACTIVE' and tm.status='ACTIVE' And a.status ILIKE %:status% and (a.type ='order') AND (CASE WHEN a.status = 'DELIVERED' THEN (EXTRACT(YEAR FROM TO_DATE(a.assigned_on,'yyyy-mm-dd')) = EXTRACT(YEAR FROM CURRENT_DATE) AND EXTRACT(MONTH FROM TO_DATE(a.assigned_on,'yyyy-mm-dd')) = EXTRACT(MONTH FROM CURRENT_DATE)) ELSE 1=1 END)", nativeQuery = true)
    List<Ticket> getOredrByUser(@Param("assignedTo") String assignedTo, @Param("status") String status,@Param("tenantId") String tenantId);
    
    @Query(value = "SELECT DISTINCT a.ticket_id, a.created_by, a.created_on, a.modified_by, a.modified_on, a.tenant_id, a.version_no, a.assigned_on, a.assigned_to, a.emailed_by, a.manufacturer, a.manufacturer_id, a.status, a.stockist_id, a.subject, a.type, a.eml, a.sent_date, a.file_path"
            + " FROM tbl_ticket_order_invoice i LEFT JOIN tbl_ticket a ON i.ticket_id= a.ticket_id  LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = a.manufacturer_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = m.manufacturer_id where a.tenant_id = :tenantId and a.assigned_to=:assignedTo AND m.status = 'ACTIVE' and tm.status='ACTIVE' And i.status ILIKE %:status% and (a.type ='order' ) AND (CASE WHEN i.status = 'DELIVERED' THEN (EXTRACT(YEAR FROM i.created_on) = EXTRACT(YEAR FROM CURRENT_DATE) AND EXTRACT(MONTH FROM i.created_on) = EXTRACT(MONTH FROM CURRENT_DATE)) ELSE 1=1 END)", nativeQuery = true)
    List<Ticket> getOrderInvoiceByUser(@Param("assignedTo") String assignedTo, @Param("status") String status,@Param("tenantId") String tenantId);

    @Query(value = "SELECT (CASE WHEN i.invoice_number IS NOT null  THEN i.invoice_number ELSE '' END),a.ticket_id,a.assigned_on,us.first_name, a.emailed_by, (CASE WHEN (i.status IS NOT null AND a.status !='CANCELLED')  THEN i.status ELSE a.status END), a.stockist_id, a.subject,a.eml,a.sent_date,a.file_path FROM tbl_ticket_order_invoice i FULL JOIN tbl_ticket a ON i.ticket_id=a.ticket_id LEFT JOIN tbl_user us ON a.assigned_to =us.user_id left join tbl_stockist st ON st.stockist_id= a.stockist_id left join  tbl_manager_manufacturer_mapping b on a.manufacturer_id =b.manufacturerid LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = a.manufacturer_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = a.manufacturer_id and tm.tenant_id = a.tenant_id where b.user_id=:userId And a.tenant_id =:tenantId AND (i.status ILIKE %:status% OR a.status ILIKE  %:status% ) AND m.status = 'ACTIVE' and tm.status='ACTIVE' AND (CASE WHEN (a.status = 'CANCELLED') THEN (EXTRACT(YEAR FROM TO_DATE(a.assigned_on,'yyyy-mm-dd')) = EXTRACT(YEAR FROM CURRENT_DATE) AND EXTRACT(MONTH FROM TO_DATE(a.assigned_on,'yyyy-mm-dd')) = EXTRACT(MONTH FROM CURRENT_DATE))WHEN (i.status = 'POD RECEIVED' OR i.status = 'DELIVERED') THEN (EXTRACT(YEAR FROM i.created_on) = EXTRACT(YEAR FROM CURRENT_DATE) AND EXTRACT(MONTH FROM i.created_on) = EXTRACT(MONTH FROM CURRENT_DATE)) ELSE 1=1 END) And (a.type = 'order') AND (i.invoice_number ILIKE %:search% OR a.ticket_id ILIKE %:search%  OR us.first_name ILIKE %:search% OR a.emailed_by ILIKE %:search%  OR st.stockist_name ILIKE %:search% OR a.subject ILIKE %:search% OR case when a.status IN('ASSIGNED','BLOCKED') then a.status ILIKE %:search%  else  i.status ILIKE %:search%  end ) GROUP BY i.invoice_number,a.ticket_id,i.ticket_id,a.assigned_on,us.first_name,a.emailed_by,i.status,a.stockist_id, a.subject", nativeQuery = true)
    public List<Object[]> getOrderByManager(@Param("userId") String userId, @Param("tenantId") String tenantId,@Param("search") String search,@Param("status") String status, Pageable pageable);
    
    @Query(value = "SELECT (CASE WHEN i.invoice_number IS NOT null  THEN i.invoice_number ELSE '' END),a.ticket_id,a.assigned_on,us.first_name, a.emailed_by, (CASE WHEN (i.status IS NOT null AND a.status !='CANCELLED')  THEN i.status ELSE a.status END), a.stockist_id, a.subject,a.eml,a.sent_date,a.file_path FROM tbl_ticket_order_invoice i FULL JOIN tbl_ticket a ON i.ticket_id=a.ticket_id LEFT JOIN tbl_user us ON a.assigned_to =us.user_id left join tbl_stockist st ON st.stockist_id= a.stockist_id left join  tbl_manager_manufacturer_mapping b on a.manufacturer_id =b.manufacturerid LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = a.manufacturer_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = a.manufacturer_id and tm.tenant_id = a.tenant_id where b.user_id=:userId And a.tenant_id =:tenantId AND  a.status =:status  AND m.status = 'ACTIVE' and tm.status='ACTIVE' AND (CASE WHEN ( a.status = 'CANCELLED') THEN (EXTRACT(YEAR FROM TO_DATE(a.assigned_on,'yyyy-mm-dd')) = EXTRACT(YEAR FROM CURRENT_DATE) AND EXTRACT(MONTH FROM TO_DATE(a.assigned_on,'yyyy-mm-dd')) = EXTRACT(MONTH FROM CURRENT_DATE))WHEN (i.status = 'POD RECEIVED' OR i.status = 'DELIVERED') THEN (EXTRACT(YEAR FROM i.created_on) = EXTRACT(YEAR FROM CURRENT_DATE) AND EXTRACT(MONTH FROM i.created_on) = EXTRACT(MONTH FROM CURRENT_DATE)) ELSE 1=1 END) And (a.type = 'order') AND (i.invoice_number ILIKE %:search% OR a.ticket_id ILIKE %:search%  OR us.first_name ILIKE %:search% OR a.emailed_by ILIKE %:search% OR a.status ILIKE %:search% OR st.stockist_name ILIKE %:search% OR a.subject ILIKE %:search% OR i.status ILIKE %:search%) GROUP BY i.invoice_number,a.ticket_id,i.ticket_id,a.assigned_on,us.first_name,a.emailed_by,i.status,a.stockist_id, a.subject", nativeQuery = true)
    public List<Object[]> getOrderByManagerAssigned(@Param("userId") String userId, @Param("tenantId") String tenantId,@Param("search") String search,@Param("status") String status, Pageable pageable);
    
    @Query(value = "SELECT (CASE WHEN i.invoice_number IS NOT null  THEN i.invoice_number ELSE '' END),a.ticket_id,a.assigned_on,us.first_name, a.emailed_by, (CASE WHEN (i.status IS NOT null AND a.status !='CANCELLED')  THEN i.status ELSE a.status END), a.stockist_id, a.subject,a.eml,a.sent_date,a.file_path FROM tbl_ticket_order_invoice i FULL JOIN tbl_ticket a ON i.ticket_id=a.ticket_id LEFT JOIN tbl_user us ON a.assigned_to =us.user_id left join tbl_stockist st ON st.stockist_id= a.stockist_id left join  tbl_manager_manufacturer_mapping b on a.manufacturer_id =b.manufacturerid LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = a.manufacturer_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = a.manufacturer_id and tm.tenant_id = a.tenant_id where a.assigned_to=:userId And a.tenant_id =:tenantId AND  a.status =:status  AND m.status = 'ACTIVE' and tm.status='ACTIVE' AND (CASE WHEN (a.status = 'CANCELLED') THEN (EXTRACT(YEAR FROM TO_DATE(a.assigned_on,'yyyy-mm-dd')) = EXTRACT(YEAR FROM CURRENT_DATE) AND EXTRACT(MONTH FROM TO_DATE(a.assigned_on,'yyyy-mm-dd')) = EXTRACT(MONTH FROM CURRENT_DATE))WHEN (i.status = 'POD RECEIVED' OR i.status = 'DELIVERED') THEN (EXTRACT(YEAR FROM i.created_on) = EXTRACT(YEAR FROM CURRENT_DATE) AND EXTRACT(MONTH FROM i.created_on) = EXTRACT(MONTH FROM CURRENT_DATE)) ELSE 1=1 END) And (a.type = 'order') AND (i.invoice_number ILIKE %:search% OR a.ticket_id ILIKE %:search%  OR us.first_name ILIKE %:search% OR a.emailed_by ILIKE %:search% OR a.status ILIKE %:search% OR st.stockist_name ILIKE %:search% OR a.subject ILIKE %:search% OR i.status ILIKE %:search%) GROUP BY i.invoice_number,a.ticket_id,i.ticket_id,a.assigned_on,us.first_name,a.emailed_by,i.status,a.stockist_id, a.subject", nativeQuery = true)
    public List<Object[]> getOrderByUserrAssigned(@Param("userId") String userId, @Param("tenantId") String tenantId,@Param("search") String search,@Param("status") String status, Pageable pageable);
    
    
    
    @Query(value = "SELECT (CASE WHEN i.invoice_number IS NOT null  THEN i.invoice_number ELSE '' END),a.ticket_id,a.assigned_on,us.first_name, a.emailed_by, (CASE WHEN (i.status IS NOT null AND a.status !='CANCELLED')  THEN i.status ELSE a.status END), a.stockist_id, a.subject,a.eml,a.sent_date,a.file_path FROM tbl_ticket_order_invoice i FULL JOIN tbl_ticket a ON i.ticket_id=a.ticket_id LEFT JOIN tbl_user us ON a.assigned_to =us.user_id left join tbl_stockist st ON st.stockist_id= a.stockist_id left join  tbl_manager_manufacturer_mapping b on a.manufacturer_id =b.manufacturerid LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = a.manufacturer_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = a.manufacturer_id and tm.tenant_id = a.tenant_id where a.assigned_to=:userId And a.tenant_id =:tenantId AND (i.status ILIKE %:status% OR a.status ILIKE  %:status% ) AND m.status = 'ACTIVE' and tm.status='ACTIVE' AND (CASE WHEN ( a.status = 'CANCELLED') THEN (EXTRACT(YEAR FROM TO_DATE(a.assigned_on,'yyyy-mm-dd')) = EXTRACT(YEAR FROM CURRENT_DATE) AND EXTRACT(MONTH FROM TO_DATE(a.assigned_on,'yyyy-mm-dd')) = EXTRACT(MONTH FROM CURRENT_DATE))WHEN (i.status = 'POD RECEIVED' OR i.status = 'DELIVERED') THEN (EXTRACT(YEAR FROM i.created_on) = EXTRACT(YEAR FROM CURRENT_DATE) AND EXTRACT(MONTH FROM i.created_on) = EXTRACT(MONTH FROM CURRENT_DATE)) ELSE 1=1 END) And (a.type = 'order') AND (i.invoice_number ILIKE %:search% OR a.ticket_id ILIKE %:search%  OR us.first_name ILIKE %:search% OR a.emailed_by ILIKE %:search% OR a.status ILIKE %:search% OR st.stockist_name ILIKE %:search% OR a.subject ILIKE %:search% OR i.status ILIKE %:search%) GROUP BY i.invoice_number,a.ticket_id,i.ticket_id,a.assigned_on,us.first_name,a.emailed_by,i.status,a.stockist_id, a.subject", nativeQuery = true)
    public List<Object[]> getOrderByUser(@Param("userId") String userId, @Param("tenantId") String tenantId,@Param("search") String search,@Param("status") String status, Pageable pageable);
    
    
    @Query(value = "SELECT (CASE WHEN i.invoice_number IS NOT null  THEN i.invoice_number ELSE '' END),a.ticket_id,a.assigned_on,us.first_name, a.emailed_by,(CASE WHEN (i.status IS NOT null AND a.status !='CANCELLED')  THEN i.status ELSE a.status END), a.stockist_id, a.subject,a.eml,a.sent_date,a.file_path FROM tbl_ticket_order_invoice i FULL JOIN tbl_ticket a ON i.ticket_id=a.ticket_id LEFT JOIN tbl_user us ON a.assigned_to =us.user_id left join tbl_stockist st ON st.stockist_id= a.stockist_id left join  tbl_manager_manufacturer_mapping b on a.manufacturer_id =b.manufacturerid LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = a.manufacturer_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = a.manufacturer_id and tm.tenant_id = a.tenant_id where b.user_id=:userId And a.tenant_id =:tenantId AND (i.status ILIKE %:status% OR a.status ILIKE  %:status% ) AND m.status = 'ACTIVE' and tm.status='ACTIVE' AND (CASE WHEN ( a.status = 'CANCELLED') THEN (EXTRACT(YEAR FROM TO_DATE(a.assigned_on,'yyyy-mm-dd')) = EXTRACT(YEAR FROM CURRENT_DATE) AND EXTRACT(MONTH FROM TO_DATE(a.assigned_on,'yyyy-mm-dd')) = EXTRACT(MONTH FROM CURRENT_DATE))WHEN (i.status = 'POD RECEIVED' OR i.status = 'DELIVERED') THEN (EXTRACT(YEAR FROM i.created_on) = EXTRACT(YEAR FROM CURRENT_DATE) AND EXTRACT(MONTH FROM i.created_on) = EXTRACT(MONTH FROM CURRENT_DATE)) ELSE 1=1 END) And (a.type = 'order') AND (i.invoice_number ILIKE %:search% OR a.ticket_id ILIKE %:search%  OR us.first_name ILIKE %:search% OR a.emailed_by ILIKE %:search%  OR st.stockist_name ILIKE %:search% OR a.subject ILIKE %:search% OR case when a.status IN('ASSIGNED','BLOCKED') then a.status ILIKE %:search%  else  i.status ILIKE %:search%  end ) GROUP BY i.invoice_number,a.ticket_id,i.ticket_id,a.assigned_on,us.first_name,a.emailed_by,i.status,a.stockist_id, a.subject", nativeQuery = true)
    public List<Object[]> getOrderByManagerWithOutPaging(@Param("userId") String userId, @Param("tenantId") String tenantId,@Param("search") String search,@Param("status") String status);
    
    @Query(value = "SELECT (CASE WHEN i.invoice_number IS NOT null  THEN i.invoice_number ELSE '' END),a.ticket_id,a.assigned_on,us.first_name, a.emailed_by,(CASE WHEN (i.status IS NOT null AND a.status !='CANCELLED')  THEN i.status ELSE a.status END), a.stockist_id, a.subject,a.eml,a.sent_date,a.file_path FROM tbl_ticket_order_invoice i FULL JOIN tbl_ticket a ON i.ticket_id=a.ticket_id LEFT JOIN tbl_user us ON a.assigned_to =us.user_id left join tbl_stockist st ON st.stockist_id= a.stockist_id left join  tbl_manager_manufacturer_mapping b on a.manufacturer_id =b.manufacturerid LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = a.manufacturer_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = a.manufacturer_id and tm.tenant_id = a.tenant_id where b.user_id=:userId And a.tenant_id =:tenantId AND  a.status =:status  AND m.status = 'ACTIVE' and tm.status='ACTIVE' AND (CASE WHEN ( a.status = 'CANCELLED') THEN (EXTRACT(YEAR FROM TO_DATE(a.assigned_on,'yyyy-mm-dd')) = EXTRACT(YEAR FROM CURRENT_DATE) AND EXTRACT(MONTH FROM TO_DATE(a.assigned_on,'yyyy-mm-dd')) = EXTRACT(MONTH FROM CURRENT_DATE))WHEN (i.status = 'POD RECEIVED' OR i.status = 'DELIVERED') THEN (EXTRACT(YEAR FROM i.created_on) = EXTRACT(YEAR FROM CURRENT_DATE) AND EXTRACT(MONTH FROM i.created_on) = EXTRACT(MONTH FROM CURRENT_DATE)) ELSE 1=1 END) And (a.type = 'order') AND (i.invoice_number ILIKE %:search% OR a.ticket_id ILIKE %:search%  OR us.first_name ILIKE %:search% OR a.emailed_by ILIKE %:search% OR a.status ILIKE %:search% OR st.stockist_name ILIKE %:search% OR a.subject ILIKE %:search% OR i.status ILIKE %:search%) GROUP BY i.invoice_number,a.ticket_id,i.ticket_id,a.assigned_on,us.first_name,a.emailed_by,i.status,a.stockist_id, a.subject", nativeQuery = true)
    public List<Object[]> getOrderByManagerWithOutPagingAssigned(@Param("userId") String userId, @Param("tenantId") String tenantId,@Param("search") String search,@Param("status") String status);
    
    @Query(value = "SELECT (CASE WHEN i.invoice_number IS NOT null  THEN i.invoice_number ELSE '' END),a.ticket_id,a.assigned_on,us.first_name, a.emailed_by,(CASE WHEN (i.status IS NOT null AND a.status !='CANCELLED')  THEN i.status ELSE a.status END), a.stockist_id, a.subject,a.eml,a.sent_date,a.file_path FROM tbl_ticket_order_invoice i FULL JOIN tbl_ticket a ON i.ticket_id=a.ticket_id LEFT JOIN tbl_user us ON a.assigned_to =us.user_id left join tbl_stockist st ON st.stockist_id= a.stockist_id left join  tbl_manager_manufacturer_mapping b on a.manufacturer_id =b.manufacturerid LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = a.manufacturer_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = a.manufacturer_id and tm.tenant_id = a.tenant_id where a.assigned_to=:userId And a.tenant_id =:tenantId AND  a.status =:status  AND m.status = 'ACTIVE' and tm.status='ACTIVE' AND (CASE WHEN ( a.status = 'CANCELLED') THEN (EXTRACT(YEAR FROM TO_DATE(a.assigned_on,'yyyy-mm-dd')) = EXTRACT(YEAR FROM CURRENT_DATE) AND EXTRACT(MONTH FROM TO_DATE(a.assigned_on,'yyyy-mm-dd')) = EXTRACT(MONTH FROM CURRENT_DATE))WHEN (i.status = 'POD RECEIVED' OR i.status = 'DELIVERED') THEN (EXTRACT(YEAR FROM i.created_on) = EXTRACT(YEAR FROM CURRENT_DATE) AND EXTRACT(MONTH FROM i.created_on) = EXTRACT(MONTH FROM CURRENT_DATE)) ELSE 1=1 END) And (a.type = 'order') AND (i.invoice_number ILIKE %:search% OR a.ticket_id ILIKE %:search%  OR us.first_name ILIKE %:search% OR a.emailed_by ILIKE %:search% OR a.status ILIKE %:search% OR st.stockist_name ILIKE %:search% OR a.subject ILIKE %:search% OR i.status ILIKE %:search%) GROUP BY i.invoice_number,a.ticket_id,i.ticket_id,a.assigned_on,us.first_name,a.emailed_by,i.status,a.stockist_id, a.subject", nativeQuery = true)
    public List<Object[]> getOrderByUserWithOutPagingAssigned(@Param("userId") String userId, @Param("tenantId") String tenantId,@Param("search") String search,@Param("status") String status);
    


    
    @Query(value = "SELECT (CASE WHEN i.invoice_number IS NOT null  THEN i.invoice_number ELSE '' END),a.ticket_id,a.assigned_on,us.first_name, a.emailed_by,(CASE WHEN (i.status IS NOT null AND a.status !='CANCELLED')  THEN i.status ELSE a.status END), a.stockist_id, a.subject,a.eml,a.sent_date,a.file_path FROM tbl_ticket_order_invoice i FULL JOIN tbl_ticket a ON i.ticket_id=a.ticket_id LEFT JOIN tbl_user us ON a.assigned_to =us.user_id left join tbl_stockist st ON st.stockist_id= a.stockist_id left join  tbl_manager_manufacturer_mapping b on a.manufacturer_id =b.manufacturerid LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = a.manufacturer_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = a.manufacturer_id and tm.tenant_id = a.tenant_id where a.assigned_to=:userId And a.tenant_id =:tenantId AND (i.status ILIKE %:status% OR a.status ILIKE  %:status% ) AND m.status = 'ACTIVE' and tm.status='ACTIVE' AND (CASE WHEN ( a.status = 'CANCELLED') THEN (EXTRACT(YEAR FROM TO_DATE(a.assigned_on,'yyyy-mm-dd')) = EXTRACT(YEAR FROM CURRENT_DATE) AND EXTRACT(MONTH FROM TO_DATE(a.assigned_on,'yyyy-mm-dd')) = EXTRACT(MONTH FROM CURRENT_DATE))WHEN (i.status = 'POD RECEIVED' OR i.status = 'DELIVERED') THEN (EXTRACT(YEAR FROM i.created_on) = EXTRACT(YEAR FROM CURRENT_DATE) AND EXTRACT(MONTH FROM i.created_on) = EXTRACT(MONTH FROM CURRENT_DATE)) ELSE 1=1 END) And (a.type = 'order') AND (i.invoice_number ILIKE %:search% OR a.ticket_id ILIKE %:search%  OR us.first_name ILIKE %:search% OR a.emailed_by ILIKE %:search% OR a.status ILIKE %:search% OR st.stockist_name ILIKE %:search% OR a.subject ILIKE %:search% OR i.status ILIKE %:search%) GROUP BY i.invoice_number,a.ticket_id,i.ticket_id,a.assigned_on,us.first_name,a.emailed_by,i.status,a.stockist_id, a.subject", nativeQuery = true)
    public List<Object[]> getOrderByUserWithOutPaging(@Param("userId") String userId, @Param("tenantId") String tenantId,@Param("search") String search,@Param("status") String status);
    
    
    @Query(value = "SELECT (CASE WHEN i.invoice_number IS NOT null  THEN i.invoice_number ELSE '' END),a.ticket_id,a.assigned_on,us.first_name, a.emailed_by, (CASE WHEN (i.status IS NOT null AND a.status !='CANCELLED')  THEN i.status ELSE a.status END), a.stockist_id, a.subject,a.eml,a.sent_date,a.file_path FROM tbl_ticket_order_invoice i FULL JOIN tbl_ticket a ON i.ticket_id=a.ticket_id LEFT JOIN tbl_ticket_order o ON o.ticket_id= a.ticket_id LEFT JOIN tbl_user us ON a.assigned_to =us.user_id left join tbl_stockist st ON st.stockist_id= a.stockist_id left join  tbl_manager_manufacturer_mapping b on a.manufacturer_id =b.manufacturerid LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = a.manufacturer_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = a.manufacturer_id and tm.tenant_id = a.tenant_id where b.user_id=:userId And a.tenant_id =:tenantId AND o.pod_required='true' AND m.status = 'ACTIVE' and tm.status='ACTIVE' AND (CASE WHEN ( a.status = 'CANCELLED') THEN (EXTRACT(YEAR FROM TO_DATE(a.assigned_on,'yyyy-mm-dd')) = EXTRACT(YEAR FROM CURRENT_DATE) AND EXTRACT(MONTH FROM TO_DATE(a.assigned_on,'yyyy-mm-dd')) = EXTRACT(MONTH FROM CURRENT_DATE))WHEN (i.status = 'POD RECEIVED' OR i.status = 'DELIVERED') THEN (EXTRACT(YEAR FROM i.created_on) = EXTRACT(YEAR FROM CURRENT_DATE) AND EXTRACT(MONTH FROM i.created_on) = EXTRACT(MONTH FROM CURRENT_DATE)) ELSE 1=1 END) And (a.type = 'order') AND (i.invoice_number ILIKE %:search% OR a.ticket_id ILIKE %:search%  OR us.first_name ILIKE %:search% OR a.emailed_by ILIKE %:search% OR a.status ILIKE %:search% OR st.stockist_name ILIKE %:search% OR a.subject ILIKE %:search% OR i.status ILIKE %:search%) GROUP BY i.invoice_number,a.ticket_id,i.ticket_id,a.assigned_on,us.first_name,a.emailed_by,i.status,a.stockist_id, a.subject", nativeQuery = true)
    public List<Object[]> getOrderByManagerPod(@Param("userId") String userId, @Param("tenantId") String tenantId,@Param("search") String search, Pageable pageable);
    
    @Query(value = "SELECT (CASE WHEN i.invoice_number IS NOT null  THEN i.invoice_number ELSE '' END),a.ticket_id,a.assigned_on,us.first_name, a.emailed_by, (CASE WHEN (i.status IS NOT null AND a.status !='CANCELLED')  THEN i.status ELSE a.status END), a.stockist_id, a.subject,a.eml,a.sent_date,a.file_path FROM tbl_ticket_order_invoice i FULL JOIN tbl_ticket a ON i.ticket_id=a.ticket_id LEFT JOIN tbl_ticket_order o ON o.ticket_id= a.ticket_id LEFT JOIN tbl_user us ON a.assigned_to =us.user_id left join tbl_stockist st ON st.stockist_id= a.stockist_id left join  tbl_manager_manufacturer_mapping b on a.manufacturer_id =b.manufacturerid LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = a.manufacturer_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = a.manufacturer_id and tm.tenant_id = a.tenant_id where a.assigned_to=:userId And a.tenant_id =:tenantId AND o.pod_required='true' AND m.status = 'ACTIVE' and tm.status='ACTIVE' AND (CASE WHEN (a.status = 'CANCELLED') THEN (EXTRACT(YEAR FROM TO_DATE(a.assigned_on,'yyyy-mm-dd')) = EXTRACT(YEAR FROM CURRENT_DATE) AND EXTRACT(MONTH FROM TO_DATE(a.assigned_on,'yyyy-mm-dd')) = EXTRACT(MONTH FROM CURRENT_DATE))WHEN (i.status = 'POD RECEIVED' OR i.status = 'DELIVERED') THEN (EXTRACT(YEAR FROM i.created_on) = EXTRACT(YEAR FROM CURRENT_DATE) AND EXTRACT(MONTH FROM i.created_on) = EXTRACT(MONTH FROM CURRENT_DATE)) ELSE 1=1 END) And (a.type = 'order') AND (i.invoice_number ILIKE %:search% OR a.ticket_id ILIKE %:search%  OR us.first_name ILIKE %:search% OR a.emailed_by ILIKE %:search% OR a.status ILIKE %:search% OR st.stockist_name ILIKE %:search% OR a.subject ILIKE %:search% OR i.status ILIKE %:search%) GROUP BY i.invoice_number,a.ticket_id,i.ticket_id,a.assigned_on,us.first_name,a.emailed_by,i.status,a.stockist_id, a.subject", nativeQuery = true)
    public List<Object[]> getOrderByUserPod(@Param("userId") String userId, @Param("tenantId") String tenantId,@Param("search") String search, Pageable pageable);
    

    
    
    @Query(value = "SELECT (CASE WHEN i.invoice_number IS NOT null  THEN i.invoice_number ELSE '' END),a.ticket_id,a.assigned_on,us.first_name, a.emailed_by,(CASE WHEN (i.status IS NOT null AND a.status !='CANCELLED')  THEN i.status ELSE a.status END), a.stockist_id, a.subject,a.eml,a.file_path FROM tbl_ticket_order_invoice i FULL JOIN tbl_ticket a ON i.ticket_id=a.ticket_id LEFT JOIN tbl_ticket_order o ON o.ticket_id= a.ticket_id LEFT JOIN tbl_user us ON a.assigned_to =us.user_id left join tbl_stockist st ON st.stockist_id= a.stockist_id left join  tbl_manager_manufacturer_mapping b on a.manufacturer_id =b.manufacturerid LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = a.manufacturer_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = a.manufacturer_id and tm.tenant_id = a.tenant_id where b.user_id=:userId And a.tenant_id =:tenantId AND o.pod_required='true' AND m.status = 'ACTIVE' and tm.status='ACTIVE' AND (CASE WHEN ( a.status = 'CANCELLED') THEN (EXTRACT(YEAR FROM TO_DATE(a.assigned_on,'yyyy-mm-dd')) = EXTRACT(YEAR FROM CURRENT_DATE) AND EXTRACT(MONTH FROM TO_DATE(a.assigned_on,'yyyy-mm-dd')) = EXTRACT(MONTH FROM CURRENT_DATE))WHEN (i.status = 'POD RECEIVED' OR i.status = 'DELIVERED') THEN (EXTRACT(YEAR FROM i.created_on) = EXTRACT(YEAR FROM CURRENT_DATE) AND EXTRACT(MONTH FROM i.created_on) = EXTRACT(MONTH FROM CURRENT_DATE)) ELSE 1=1 END) And (a.type = 'order') AND (i.invoice_number ILIKE %:search% OR a.ticket_id ILIKE %:search%  OR us.first_name ILIKE %:search% OR a.emailed_by ILIKE %:search% OR a.status ILIKE %:search% OR st.stockist_name ILIKE %:search% OR a.subject ILIKE %:search% OR i.status ILIKE %:search%) GROUP BY i.invoice_number,a.ticket_id,i.ticket_id,a.assigned_on,us.first_name,a.emailed_by,i.status,a.stockist_id, a.subject", nativeQuery = true)
    public List<Object[]> getOrderByManagerPodWithOutPaging(@Param("userId") String userId, @Param("tenantId") String tenantId,@Param("search") String search);
    
    @Query(value = "SELECT (CASE WHEN i.invoice_number IS NOT null  THEN i.invoice_number ELSE '' END),a.ticket_id,a.assigned_on,us.first_name, a.emailed_by,(CASE WHEN (i.status IS NOT null AND a.status !='CANCELLED')  THEN i.status ELSE a.status END), a.stockist_id, a.subject,a.eml,a.file_path FROM tbl_ticket_order_invoice i FULL JOIN tbl_ticket a ON i.ticket_id=a.ticket_id LEFT JOIN tbl_ticket_order o ON o.ticket_id= a.ticket_id LEFT JOIN tbl_user us ON a.assigned_to =us.user_id left join tbl_stockist st ON st.stockist_id= a.stockist_id left join  tbl_manager_manufacturer_mapping b on a.manufacturer_id =b.manufacturerid LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = a.manufacturer_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = a.manufacturer_id and tm.tenant_id = a.tenant_id where a.assigned_to=:userId And a.tenant_id =:tenantId AND o.pod_required='true' AND m.status = 'ACTIVE' and tm.status='ACTIVE' AND (CASE WHEN (a.status = 'BLOCKED' OR a.status = 'CANCELLED') THEN (EXTRACT(YEAR FROM TO_DATE(a.assigned_on,'yyyy-mm-dd')) = EXTRACT(YEAR FROM CURRENT_DATE) AND EXTRACT(MONTH FROM TO_DATE(a.assigned_on,'yyyy-mm-dd')) = EXTRACT(MONTH FROM CURRENT_DATE))WHEN (i.status = 'POD RECEIVED' OR i.status = 'DELIVERED') THEN (EXTRACT(YEAR FROM i.created_on) = EXTRACT(YEAR FROM CURRENT_DATE) AND EXTRACT(MONTH FROM i.created_on) = EXTRACT(MONTH FROM CURRENT_DATE)) ELSE 1=1 END) And (a.type = 'order') AND (i.invoice_number ILIKE %:search% OR a.ticket_id ILIKE %:search%  OR us.first_name ILIKE %:search% OR a.emailed_by ILIKE %:search% OR a.status ILIKE %:search% OR st.stockist_name ILIKE %:search% OR a.subject ILIKE %:search% OR i.status ILIKE %:search%) GROUP BY i.invoice_number,a.ticket_id,i.ticket_id,a.assigned_on,us.first_name,a.emailed_by,i.status,a.stockist_id, a.subject", nativeQuery = true)
    public List<Object[]> getOrderByUserPodWithOutPaging(@Param("userId") String userId, @Param("tenantId") String tenantId,@Param("search") String search);
    

    
    
    @Query(value = "SELECT (CASE WHEN i.invoice_number IS NOT null  THEN i.invoice_number ELSE '' END),a.ticket_id,a.assigned_on,us.first_name, a.emailed_by, (CASE WHEN (i.status IS NOT null AND a.status !='CANCELLED')  THEN i.status ELSE a.status END), a.stockist_id, a.subject,a.eml,a.sent_date,a.file_path FROM tbl_ticket_order_invoice i FULL JOIN tbl_ticket a ON i.ticket_id=a.ticket_id LEFT JOIN tbl_ticket_order o ON o.ticket_id= a.ticket_id LEFT JOIN tbl_user us ON a.assigned_to =us.user_id left join tbl_stockist st ON st.stockist_id= a.stockist_id left join  tbl_manager_manufacturer_mapping b on a.manufacturer_id =b.manufacturerid LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = a.manufacturer_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = a.manufacturer_id and tm.tenant_id = a.tenant_id where b.user_id=:userId And a.tenant_id =:tenantId AND o.ccd_required='true' AND m.status = 'ACTIVE' and tm.status='ACTIVE' AND (CASE WHEN ( a.status = 'CANCELLED') THEN (EXTRACT(YEAR FROM TO_DATE(a.assigned_on,'yyyy-mm-dd')) = EXTRACT(YEAR FROM CURRENT_DATE) AND EXTRACT(MONTH FROM TO_DATE(a.assigned_on,'yyyy-mm-dd')) = EXTRACT(MONTH FROM CURRENT_DATE))WHEN (i.status = 'POD RECEIVED' OR i.status = 'DELIVERED') THEN (EXTRACT(YEAR FROM i.created_on) = EXTRACT(YEAR FROM CURRENT_DATE) AND EXTRACT(MONTH FROM i.created_on) = EXTRACT(MONTH FROM CURRENT_DATE)) ELSE 1=1 END) And (a.type = 'order') AND (i.invoice_number ILIKE %:search% OR a.ticket_id ILIKE %:search%  OR us.first_name ILIKE %:search% OR a.emailed_by ILIKE %:search% OR a.status ILIKE %:search% OR st.stockist_name ILIKE %:search% OR a.subject ILIKE %:search% OR i.status ILIKE %:search%) GROUP BY i.invoice_number,a.ticket_id,i.ticket_id,a.assigned_on,us.first_name,a.emailed_by,i.status,a.stockist_id, a.subject", nativeQuery = true)
    public List<Object[]> getOrderByManagerCcd(@Param("userId") String userId, @Param("tenantId") String tenantId,@Param("search") String search, Pageable pageable);
   
    @Query(value = "SELECT (CASE WHEN i.invoice_number IS NOT null  THEN i.invoice_number ELSE '' END),a.ticket_id,a.assigned_on,us.first_name, a.emailed_by, (CASE WHEN (i.status IS NOT null AND a.status !='CANCELLED')  THEN i.status ELSE a.status END), a.stockist_id, a.subject,a.eml,a.sent_date,a.file_path FROM tbl_ticket_order_invoice i FULL JOIN tbl_ticket a ON i.ticket_id=a.ticket_id LEFT JOIN tbl_ticket_order o ON o.ticket_id= a.ticket_id LEFT JOIN tbl_user us ON a.assigned_to =us.user_id left join tbl_stockist st ON st.stockist_id= a.stockist_id left join  tbl_manager_manufacturer_mapping b on a.manufacturer_id =b.manufacturerid LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = a.manufacturer_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = a.manufacturer_id and tm.tenant_id = a.tenant_id where a.assigned_to=:userId And a.tenant_id =:tenantId AND o.ccd_required='true' AND m.status = 'ACTIVE' and tm.status='ACTIVE' AND (CASE WHEN ( a.status = 'CANCELLED') THEN (EXTRACT(YEAR FROM TO_DATE(a.assigned_on,'yyyy-mm-dd')) = EXTRACT(YEAR FROM CURRENT_DATE) AND EXTRACT(MONTH FROM TO_DATE(a.assigned_on,'yyyy-mm-dd')) = EXTRACT(MONTH FROM CURRENT_DATE))WHEN (i.status = 'POD RECEIVED' OR i.status = 'DELIVERED') THEN (EXTRACT(YEAR FROM i.created_on) = EXTRACT(YEAR FROM CURRENT_DATE) AND EXTRACT(MONTH FROM i.created_on) = EXTRACT(MONTH FROM CURRENT_DATE)) ELSE 1=1 END) And (a.type = 'order') AND (i.invoice_number ILIKE %:search% OR a.ticket_id ILIKE %:search%  OR us.first_name ILIKE %:search% OR a.emailed_by ILIKE %:search% OR a.status ILIKE %:search% OR st.stockist_name ILIKE %:search% OR a.subject ILIKE %:search% OR i.status ILIKE %:search%) GROUP BY i.invoice_number,a.ticket_id,i.ticket_id,a.assigned_on,us.first_name,a.emailed_by,i.status,a.stockist_id, a.subject", nativeQuery = true)
    public List<Object[]> getOrderByUserCcd(@Param("userId") String userId, @Param("tenantId") String tenantId,@Param("search") String search, Pageable pageable);
    
    
    @Query(value = "SELECT (CASE WHEN i.invoice_number IS NOT null  THEN i.invoice_number ELSE '' END),a.ticket_id,a.assigned_on,us.first_name, a.emailed_by,(CASE WHEN (i.status IS NOT null AND a.status !='CANCELLED')  THEN i.status ELSE a.status END), a.stockist_id, a.subject,a.eml,a.sent_date,a.file_path FROM tbl_ticket_order_invoice i FULL JOIN tbl_ticket a ON i.ticket_id=a.ticket_id LEFT JOIN tbl_ticket_order o ON o.ticket_id= a.ticket_id LEFT JOIN tbl_user us ON a.assigned_to =us.user_id left join tbl_stockist st ON st.stockist_id= a.stockist_id left join  tbl_manager_manufacturer_mapping b on a.manufacturer_id =b.manufacturerid LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = a.manufacturer_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = a.manufacturer_id and tm.tenant_id = a.tenant_id where b.user_id=:userId And a.tenant_id =:tenantId AND o.ccd_required='true' AND m.status = 'ACTIVE' and tm.status='ACTIVE' AND (CASE WHEN ( a.status = 'CANCELLED') THEN (EXTRACT(YEAR FROM TO_DATE(a.assigned_on,'yyyy-mm-dd')) = EXTRACT(YEAR FROM CURRENT_DATE) AND EXTRACT(MONTH FROM TO_DATE(a.assigned_on,'yyyy-mm-dd')) = EXTRACT(MONTH FROM CURRENT_DATE))WHEN (i.status = 'POD RECEIVED' OR i.status = 'DELIVERED') THEN (EXTRACT(YEAR FROM i.created_on) = EXTRACT(YEAR FROM CURRENT_DATE) AND EXTRACT(MONTH FROM i.created_on) = EXTRACT(MONTH FROM CURRENT_DATE)) ELSE 1=1 END) And (a.type = 'order') AND (i.invoice_number ILIKE %:search% OR a.ticket_id ILIKE %:search%  OR us.first_name ILIKE %:search% OR a.emailed_by ILIKE %:search% OR a.status ILIKE %:search% OR st.stockist_name ILIKE %:search% OR a.subject ILIKE %:search% OR i.status ILIKE %:search%) GROUP BY i.invoice_number,a.ticket_id,i.ticket_id,a.assigned_on,us.first_name,a.emailed_by,i.status,a.stockist_id, a.subject", nativeQuery = true)
    public List<Object[]> getOrderByManagerCcdWithOutPaging(@Param("userId") String userId, @Param("tenantId") String tenantId,@Param("search") String search);
    
    @Query(value = "SELECT (CASE WHEN i.invoice_number IS NOT null  THEN i.invoice_number ELSE '' END),a.ticket_id,a.assigned_on,us.first_name, a.emailed_by,(CASE WHEN (i.status IS NOT null AND a.status !='CANCELLED')  THEN i.status ELSE a.status END), a.stockist_id, a.subject,a.eml,a.sent_date,a.file_path FROM tbl_ticket_order_invoice i FULL JOIN tbl_ticket a ON i.ticket_id=a.ticket_id LEFT JOIN tbl_ticket_order o ON o.ticket_id= a.ticket_id LEFT JOIN tbl_user us ON a.assigned_to =us.user_id left join tbl_stockist st ON st.stockist_id= a.stockist_id left join  tbl_manager_manufacturer_mapping b on a.manufacturer_id =b.manufacturerid LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = a.manufacturer_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = a.manufacturer_id and tm.tenant_id = a.tenant_id where a.assigned_to=:userId And a.tenant_id =:tenantId AND o.ccd_required='true' AND m.status = 'ACTIVE' and tm.status='ACTIVE' AND (CASE WHEN ( a.status = 'CANCELLED') THEN (EXTRACT(YEAR FROM TO_DATE(a.assigned_on,'yyyy-mm-dd')) = EXTRACT(YEAR FROM CURRENT_DATE) AND EXTRACT(MONTH FROM TO_DATE(a.assigned_on,'yyyy-mm-dd')) = EXTRACT(MONTH FROM CURRENT_DATE))WHEN (i.status = 'POD RECEIVED' OR i.status = 'DELIVERED') THEN (EXTRACT(YEAR FROM i.created_on) = EXTRACT(YEAR FROM CURRENT_DATE) AND EXTRACT(MONTH FROM i.created_on) = EXTRACT(MONTH FROM CURRENT_DATE)) ELSE 1=1 END) And (a.type = 'order') AND (i.invoice_number ILIKE %:search% OR a.ticket_id ILIKE %:search%  OR us.first_name ILIKE %:search% OR a.emailed_by ILIKE %:search% OR a.status ILIKE %:search% OR st.stockist_name ILIKE %:search% OR a.subject ILIKE %:search% OR i.status ILIKE %:search%) GROUP BY i.invoice_number,a.ticket_id,i.ticket_id,a.assigned_on,us.first_name,a.emailed_by,i.status,a.stockist_id, a.subject", nativeQuery = true)
    public List<Object[]> getOrderByUserCcdWithOutPaging(@Param("userId") String userId, @Param("tenantId") String tenantId,@Param("search") String search);
    
    
    
    
    
    
    @Query(value = "SELECT (CASE WHEN i.invoice_number IS NOT null  THEN i.invoice_number ELSE '' END),a.ticket_id,a.assigned_on,us.first_name, a.emailed_by,(CASE WHEN (i.status IS NOT null AND a.status !='CANCELLED')  THEN i.status ELSE a.status END), a.stockist_id, a.subject,a.eml,a.sent_date,a.file_path FROM tbl_ticket_order_invoice i FULL JOIN tbl_ticket a ON i.ticket_id=a.ticket_id LEFT JOIN tbl_user us ON a.assigned_to =us.user_id left join tbl_stockist st ON st.stockist_id= a.stockist_id left join  tbl_manager_manufacturer_mapping b on a.manufacturer_id =b.manufacturerid LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = a.manufacturer_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = a.manufacturer_id and tm.tenant_id = a.tenant_id where b.user_id=:userId And a.tenant_id =:tenantId AND m.status = 'ACTIVE' and tm.status='ACTIVE' AND (CASE WHEN (a.status = 'CANCELLED') THEN (EXTRACT(YEAR FROM TO_DATE(a.assigned_on,'yyyy-mm-dd')) = EXTRACT(YEAR FROM CURRENT_DATE) AND EXTRACT(MONTH FROM TO_DATE(a.assigned_on,'yyyy-mm-dd')) = EXTRACT(MONTH FROM CURRENT_DATE))WHEN (i.status = 'POD RECEIVED' OR i.status = 'DELIVERED') THEN (EXTRACT(YEAR FROM i.created_on) = EXTRACT(YEAR FROM CURRENT_DATE) AND EXTRACT(MONTH FROM i.created_on) = EXTRACT(MONTH FROM CURRENT_DATE)) ELSE 1=1 END) AND  a.assigned_to=:assignedTo And (a.type = 'order') AND (i.invoice_number ILIKE %:search% OR a.ticket_id ILIKE %:search%  OR us.first_name ILIKE %:search% OR a.emailed_by ILIKE %:search% OR a.status ILIKE %:search% OR st.stockist_name ILIKE %:search% OR a.subject ILIKE %:search% OR i.status ILIKE %:search%) GROUP BY i.invoice_number,a.ticket_id,i.ticket_id,a.assigned_on,us.first_name,a.emailed_by,i.status,a.stockist_id, a.subject", nativeQuery = true)
    public List<Object[]> getOrderByManagerAssignSelf(@Param("userId") String userId, @Param("tenantId") String tenantId,@Param("search") String search, @Param("assignedTo") String assignedTo, Pageable pageable);
    
    @Query(value = "SELECT (CASE WHEN i.invoice_number IS NOT null  THEN i.invoice_number ELSE '' END),a.ticket_id,a.assigned_on,us.first_name, a.emailed_by,(CASE WHEN (i.status IS NOT null AND a.status !='CANCELLED')  THEN i.status ELSE a.status END),  a.stockist_id, a.subject,a.eml,a.file_path FROM tbl_ticket_order_invoice i FULL JOIN tbl_ticket a ON i.ticket_id=a.ticket_id LEFT JOIN tbl_user us ON a.assigned_to =us.user_id left join tbl_stockist st ON st.stockist_id= a.stockist_id left join  tbl_manager_manufacturer_mapping b on a.manufacturer_id =b.manufacturerid LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = a.manufacturer_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = a.manufacturer_id and tm.tenant_id = a.tenant_id where b.user_id=:userId And a.tenant_id =:tenantId AND m.status = 'ACTIVE' and tm.status='ACTIVE' AND (CASE WHEN (a.status = 'CANCELLED') THEN (EXTRACT(YEAR FROM TO_DATE(a.assigned_on,'yyyy-mm-dd')) = EXTRACT(YEAR FROM CURRENT_DATE) AND EXTRACT(MONTH FROM TO_DATE(a.assigned_on,'yyyy-mm-dd')) = EXTRACT(MONTH FROM CURRENT_DATE))WHEN (i.status = 'POD RECEIVED' OR i.status = 'DELIVERED') THEN (EXTRACT(YEAR FROM i.created_on) = EXTRACT(YEAR FROM CURRENT_DATE) AND EXTRACT(MONTH FROM i.created_on) = EXTRACT(MONTH FROM CURRENT_DATE)) ELSE 1=1 END) AND a.assigned_to=:assignedTo And (a.type = 'order') AND (i.invoice_number ILIKE %:search% OR a.ticket_id ILIKE %:search%  OR us.first_name ILIKE %:search% OR a.emailed_by ILIKE %:search% OR a.status ILIKE %:search% OR st.stockist_name ILIKE %:search% OR a.subject ILIKE %:search% OR i.status ILIKE %:search%) GROUP BY i.invoice_number,a.ticket_id,i.ticket_id,a.assigned_on,us.first_name,a.emailed_by,i.status,a.stockist_id, a.subject", nativeQuery = true)
    public List<Object[]> getOrderByManagerAssignSelfWithOutPaging(@Param("userId") String userId, @Param("tenantId") String tenantId,@Param("search") String search, @Param("assignedTo") String assignedTo);
    
    @Query(value = "SELECT (CASE WHEN i.invoice_number IS NOT null  THEN i.invoice_number ELSE '' END),a.ticket_id,a.assigned_on,us.first_name, a.emailed_by,(CASE WHEN (i.status IS NOT null AND a.status !='CANCELLED')  THEN i.status ELSE a.status END), a.stockist_id, a.subject,a.eml,a.sent_date,a.file_path FROM tbl_ticket_order_invoice i FULL JOIN tbl_ticket a ON i.ticket_id=a.ticket_id LEFT JOIN tbl_user us ON a.assigned_to =us.user_id left join tbl_stockist st ON st.stockist_id= a.stockist_id left join  tbl_manager_manufacturer_mapping b on a.manufacturer_id =b.manufacturerid LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = a.manufacturer_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = a.manufacturer_id and tm.tenant_id = a.tenant_id where b.user_id=:userId And a.tenant_id =:tenantId AND m.status = 'ACTIVE' and tm.status='ACTIVE' AND (CASE WHEN ( a.status = 'CANCELLED') THEN (EXTRACT(YEAR FROM TO_DATE(a.assigned_on,'yyyy-mm-dd')) = EXTRACT(YEAR FROM CURRENT_DATE) AND EXTRACT(MONTH FROM TO_DATE(a.assigned_on,'yyyy-mm-dd')) = EXTRACT(MONTH FROM CURRENT_DATE))WHEN (i.status = 'POD RECEIVED' OR i.status = 'DELIVERED') THEN (EXTRACT(YEAR FROM i.created_on) = EXTRACT(YEAR FROM CURRENT_DATE) AND EXTRACT(MONTH FROM i.created_on) = EXTRACT(MONTH FROM CURRENT_DATE)) ELSE 1=1 END) AND a.assigned_to !=:assignedTo And (a.type = 'order') AND (i.invoice_number ILIKE %:search% OR a.ticket_id ILIKE %:search%  OR us.first_name ILIKE %:search% OR a.emailed_by ILIKE %:search% OR a.status ILIKE %:search% OR st.stockist_name ILIKE %:search% OR a.subject ILIKE %:search% OR i.status ILIKE %:search%) GROUP BY i.invoice_number,a.ticket_id,i.ticket_id,a.assigned_on,us.first_name,a.emailed_by,i.status,a.stockist_id, a.subject", nativeQuery = true)
    public List<Object[]> getOrderByManagerAssignOthers(@Param("userId") String userId, @Param("tenantId") String tenantId,@Param("search") String search, @Param("assignedTo") String assignedTo, Pageable pageable);
    
    @Query(value = "SELECT (CASE WHEN i.invoice_number IS NOT null  THEN i.invoice_number ELSE '' END),a.ticket_id,a.assigned_on,us.first_name, a.emailed_by,(CASE WHEN (i.status IS NOT null AND a.status !='CANCELLED')  THEN i.status ELSE a.status END), a.stockist_id, a.subject,a.eml,a.file_path FROM tbl_ticket_order_invoice i FULL JOIN tbl_ticket a ON i.ticket_id=a.ticket_id LEFT JOIN tbl_user us ON a.assigned_to =us.user_id left join tbl_stockist st ON st.stockist_id= a.stockist_id left join  tbl_manager_manufacturer_mapping b on a.manufacturer_id =b.manufacturerid LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = a.manufacturer_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = a.manufacturer_id and tm.tenant_id = a.tenant_id where b.user_id=:userId And a.tenant_id =:tenantId AND m.status = 'ACTIVE' and tm.status='ACTIVE' AND (CASE WHEN ( a.status = 'CANCELLED') THEN (EXTRACT(YEAR FROM TO_DATE(a.assigned_on,'yyyy-mm-dd')) = EXTRACT(YEAR FROM CURRENT_DATE) AND EXTRACT(MONTH FROM TO_DATE(a.assigned_on,'yyyy-mm-dd')) = EXTRACT(MONTH FROM CURRENT_DATE))WHEN (i.status = 'POD RECEIVED' OR i.status = 'DELIVERED') THEN (EXTRACT(YEAR FROM i.created_on) = EXTRACT(YEAR FROM CURRENT_DATE) AND EXTRACT(MONTH FROM i.created_on) = EXTRACT(MONTH FROM CURRENT_DATE)) ELSE 1=1 END) AND a.assigned_to !=:assignedTo And (a.type = 'order') AND (i.invoice_number ILIKE %:search% OR a.ticket_id ILIKE %:search%  OR us.first_name ILIKE %:search% OR a.emailed_by ILIKE %:search% OR a.status ILIKE %:search% OR st.stockist_name ILIKE %:search% OR a.subject ILIKE %:search% OR i.status ILIKE %:search%) GROUP BY i.invoice_number,a.ticket_id,i.ticket_id,a.assigned_on,us.first_name,a.emailed_by,i.status,a.stockist_id, a.subject", nativeQuery = true)
    public List<Object[]> getOrderByManagerAssignOthersWithOutPaging(@Param("userId") String userId, @Param("tenantId") String tenantId,@Param("search") String search, @Param("assignedTo") String assignedTo);
    
    
    @Query(value = "select distinct t.ticket_id,i.invoice_number from tbl_ticket_order_invoice i left join tbl_ticket t ON i.ticket_id=t.ticket_id LEFT JOIN tbl_user us ON t.assigned_to =us.user_id left join tbl_manager_manufacturer_mapping b on t.manufacturer_id = b.manufacturerId  left join tbl_tenant_manufacture tm on t.manufacturer_id =tm.manufacturer_id  and tm.tenant_id = t.tenant_id left join tbl_manufacturer m on t.manufacturer_id =m.manufacturer_id where b.user_id=:userId AND t.tenant_id=:tenantId AND t.type ='order' and m.status='ACTIVE' and tm.status='ACTIVE'", nativeQuery = true)
    public List<Object[]> getOrderIdByManager(@Param("userId") String userId, @Param("tenantId") String tenantId);
    

    @Query(value = "select distinct ticket_id from tbl_ticket t left join tbl_manager_manufacturer_mapping b on t.manufacturer_id = b.manufacturerId  left join tbl_tenant_manufacture tm on t.manufacturer_id =tm.manufacturer_id  and tm.tenant_id = t.tenant_id left join tbl_manufacturer m on t.manufacturer_id =m.manufacturer_id where b.user_id=:userId AND t.tenant_id=:tenantId AND (t.type !='order' or t.type IS NULL)  and m.status='ACTIVE' and tm.status='ACTIVE'", nativeQuery = true)
    public List<String> getTicketIdByManager(@Param("userId") String userId, @Param("tenantId") String tenantId);
    
    @Query(value = "SELECT DISTINCT a.ticket_id, a.created_by, a.created_on, a.modified_by, a.modified_on, a.tenant_id, a.version_no, a.assigned_on, a.assigned_to, a.emailed_by, a.manufacturer, a.manufacturer_id, a.status, a.stockist_id, a.subject, a.type, a.eml, a.sent_date, a.file_path"
            + " FROM tbl_ticket a left join  tbl_manager_manufacturer_mapping b on a.manufacturer_id =b.manufacturerid LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = a.manufacturer_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = a.manufacturer_id and tm.tenant_id = a.tenant_id where b.user_id=:userId And a.status ILIKE %:status% And a.tenant_id =:tenantId AND m.status = 'ACTIVE' and tm.status='ACTIVE' And (a.type ='order')", nativeQuery = true)
    public List<Ticket> getByOrderByManager(@Param("userId") String userId, @Param("status") String status,
            @Param("tenantId") String tenantId);

    @Query(value = "SELECT DISTINCT a.ticket_id, a.created_by, a.created_on, a.modified_by, a.modified_on, a.tenant_id, a.version_no, a.assigned_on, a.assigned_to, a.emailed_by, a.manufacturer, a.manufacturer_id, a.status, a.stockist_id, a.subject, a.type, a.eml, a.sent_date, a.file_path"
            + " FROM tbl_ticket a left join  tbl_manager_manufacturer_mapping b on a.manufacturer_id =b.manufacturerid LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = a.manufacturer_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = a.manufacturer_id and tm.tenant_id = a.tenant_id where b.user_id=:userId And a.status ILIKE %:status% And a.tenant_id =:tenantId AND m.status = 'ACTIVE' and tm.status='ACTIVE' And (a.type = 'order') AND (CASE WHEN a.status = 'DELIVERED' THEN (EXTRACT(YEAR FROM TO_DATE(a.assigned_on,'yyyy-mm-dd')) = EXTRACT(YEAR FROM CURRENT_DATE) AND EXTRACT(MONTH FROM TO_DATE(a.assigned_on,'yyyy-mm-dd')) = EXTRACT(MONTH FROM CURRENT_DATE)) ELSE 1=1 END)", nativeQuery = true)
    public List<Ticket> getByOrderManager(@Param("userId") String userId, @Param("status") String status,
            @Param("tenantId") String tenantId);

 
    @Query(value = "SELECT * from tbl_ticket where assigned_to=:userId and tenant_id=:tenantId and type = 'order'", nativeQuery = true)
    List<Ticket> orderByuser(String tenantId, String userId);
    

    @Query(value = "SELECT * FROM tbl_ticket where tenant_id=:tenantId and stockist_id =:stockistId and type !='order'",nativeQuery = true)
    List<Ticket> findTicketByStk(String tenantId, String stockistId);
    
    @Query(value = "SELECT * FROM tbl_ticket where tenant_id=:tenantId and stockist_id=:stockistId and type = 'order'", nativeQuery = true)
    List<Ticket> findOrderByStk(String tenantId, String stockistId);

    @Query(value = "SELECT DISTINCT a.ticket_id, a.created_by, a.created_on, a.modified_by, a.modified_on, a.tenant_id, a.version_no, a.assigned_on, a.assigned_to, a.emailed_by, a.manufacturer, a.manufacturer_id, a.status, a.stockist_id, a.subject, a.type, a.eml,a.sent_date, a.file_path, a.created_date"
            + " FROM tbl_ticket a left join  tbl_manager_manufacturer_mapping b on a.manufacturer_id =b.manufacturerid  LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = a.manufacturer_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = a.manufacturer_id and tm.tenant_id = a.tenant_id left join tbl_user u on a.assigned_to=u.user_id left join list_value_values v on v.code=a.type where b.user_id=:userId AND a.tenant_id =:tenantId AND m.status = 'ACTIVE' and tm.status='ACTIVE' and (a.type != 'order' or a.type is null or a.type='' ) and"
            + "(CASE WHEN a.status = 'COMPLETED' THEN (EXTRACT(YEAR FROM a.sent_date) = EXTRACT(YEAR FROM CURRENT_DATE) AND EXTRACT(MONTH FROM a.sent_date) = EXTRACT(MONTH FROM CURRENT_DATE)) ELSE 1=1 END)   And a.assigned_to =:assignedUser and (a.ticket_id ILIKE %:value%  OR a.emailed_by ILIKE %:value% OR  TO_CHAR(a.sent_date, 'YYYY-MM-DD')  ILIKE %:value%  OR a.status ILIKE %:value% OR a.subject ILIKE %:value% OR  v.name ILIKE %:value% OR CONCAT(u.first_name, u.last_name) ILIKE %:value%) ", nativeQuery = true)
    Page<Ticket> getTicketBySelf(String userId, String tenantId,Pageable paging, String assignedUser,String value);
    @Query(value = "SELECT DISTINCT a.ticket_id, a.created_by, a.created_on, a.modified_by, a.modified_on, a.tenant_id, a.version_no, a.assigned_on, a.assigned_to, a.emailed_by, a.manufacturer, a.manufacturer_id, a.status, a.stockist_id, a.subject, a.type, a.eml,a.sent_date, a.file_path"
            + " FROM tbl_ticket a left join  tbl_manager_manufacturer_mapping b on a.manufacturer_id =b.manufacturerid  LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = a.manufacturer_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = a.manufacturer_id and tm.tenant_id = a.tenant_id where b.user_id=:userId AND a.tenant_id =:tenantId AND m.status = 'ACTIVE' and tm.status='ACTIVE' and (a.type != 'order' or a.type is null or a.type='' ) and"
            + "(CASE WHEN a.status = 'COMPLETED' THEN (EXTRACT(YEAR FROM a.sent_date) = EXTRACT(YEAR FROM CURRENT_DATE) AND EXTRACT(MONTH FROM a.sent_date) = EXTRACT(MONTH FROM CURRENT_DATE)) ELSE 1=1 END)   And a.assigned_to =:assignedUser ", nativeQuery = true)
    List<Ticket> getTicketBySelf(String userId, String tenantId, String assignedUser);

    
    @Query(value = "SELECT DISTINCT a.ticket_id, a.created_by, a.created_on, a.modified_by, a.modified_on, a.tenant_id, a.version_no, a.assigned_on, a.assigned_to, a.emailed_by, a.manufacturer, a.manufacturer_id, a.status, a.stockist_id, a.subject, a.type, a.eml, a.sent_date, a.file_path"
            + " FROM tbl_ticket a left join  tbl_manager_manufacturer_mapping b on a.manufacturer_id =b.manufacturerid  LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = a.manufacturer_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = a.manufacturer_id and tm.tenant_id = a.tenant_id where b.user_id=:userId AND a.tenant_id =:tenantId AND m.status = 'ACTIVE' and tm.status='ACTIVE' and (a.type != 'order' or a.type is null or a.type='' ) and"
            + "(CASE WHEN a.status = 'COMPLETED' THEN (EXTRACT(YEAR FROM a.sent_date) = EXTRACT(YEAR FROM CURRENT_DATE) AND EXTRACT(MONTH FROM a.sent_date) = EXTRACT(MONTH FROM CURRENT_DATE)) ELSE 1=1 END) And a.status ILIKE %:status% And a.assigned_to !=:assignedUser ", nativeQuery = true)
    Page<Ticket> getTicketByUser(String userId, String tenantId, String status, Pageable paging, String assignedUser);
    
    @Query(value = "SELECT DISTINCT a.ticket_id, a.created_by, a.created_on, a.modified_by, a.modified_on, a.tenant_id, a.version_no, a.assigned_on, a.assigned_to, a.emailed_by, a.manufacturer, a.manufacturer_id, a.status, a.stockist_id, a.subject, a.type, a.eml, a.sent_date, a.file_path, a.created_date"
            + " FROM tbl_ticket a left join  tbl_manager_manufacturer_mapping b on a.manufacturer_id =b.manufacturerid  LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = a.manufacturer_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = a.manufacturer_id and tm.tenant_id = a.tenant_id left join tbl_user u on a.assigned_to=u.user_id left join list_value_values v on v.code=a.type   where b.user_id=:userId AND a.tenant_id =:tenantId AND m.status = 'ACTIVE' and tm.status='ACTIVE' and (a.type != 'order' or a.type is null or a.type='' ) and"
            + "(CASE WHEN a.status = 'COMPLETED' THEN (EXTRACT(YEAR FROM a.sent_date) = EXTRACT(YEAR FROM CURRENT_DATE) AND EXTRACT(MONTH FROM a.sent_date) = EXTRACT(MONTH FROM CURRENT_DATE)) ELSE 1=1 END) And a.status='ASSIGNED' and (a.ticket_id ILIKE %:value%  OR a.emailed_by ILIKE %:value% OR  TO_CHAR(a.sent_date, 'YYYY-MM-DD')  ILIKE %:value% OR a.status ILIKE %:value% OR a.subject ILIKE %:value%  OR  v.name ILIKE %:value% OR CONCAT(u.first_name, u.last_name) ILIKE %:value%) ", nativeQuery = true)
    Page<Ticket> getTicketAllAssinged(String userId, String tenantId, Pageable paging,String value);
    
    @Query(value = "SELECT DISTINCT a.ticket_id, a.created_by, a.created_on, a.modified_by, a.modified_on, a.tenant_id, a.version_no, a.assigned_on, a.assigned_to, a.emailed_by, a.manufacturer, a.manufacturer_id, a.status, a.stockist_id, a.subject, a.type, a.eml, a.sent_date, a.file_path, a.created_date"
            + " FROM tbl_ticket a left join  tbl_manager_manufacturer_mapping b on a.manufacturer_id =b.manufacturerid  LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = a.manufacturer_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = a.manufacturer_id and tm.tenant_id = a.tenant_id left join tbl_user u on a.assigned_to=u.user_id left join list_value_values v on v.code=a.type where b.user_id=:userId AND a.tenant_id =:tenantId AND m.status = 'ACTIVE' and tm.status='ACTIVE' and (a.type != 'order' or a.type is null or a.type='' ) and"
            + "(CASE WHEN a.status = 'COMPLETED' THEN (EXTRACT(YEAR FROM a.sent_date) = EXTRACT(YEAR FROM CURRENT_DATE) AND EXTRACT(MONTH FROM a.sent_date) = EXTRACT(MONTH FROM CURRENT_DATE)) ELSE 1=1 END)  And a.assigned_to !=:assignedUser and (a.ticket_id ILIKE %:value%  OR a.emailed_by ILIKE %:value% OR  TO_CHAR(a.sent_date, 'YYYY-MM-DD')  ILIKE %:value%  OR a.status ILIKE %:value% OR a.subject ILIKE %:value%  OR  v.name ILIKE %:value% OR CONCAT(u.first_name, u.last_name) ILIKE %:value%) ", nativeQuery = true)
    Page<Ticket> getTicketByUser(String userId, String tenantId, Pageable paging, String assignedUser,String value);
    
//    @Query(value = "SELECT DISTINCT a.ticket_id, a.created_by, a.created_on, a.modified_by, a.modified_on, a.tenant_id, a.version_no, a.assigned_on, a.assigned_to, a.emailed_by, a.manufacturer, a.manufacturer_id, a.status, a.stockist_id, a.subject, a.type, a.eml, a.sent_date"
//            + " FROM tbl_ticket a left join  tbl_manager_manufacturer_mapping b on a.manufacturer_id =b.manufacturerid  LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = a.manufacturer_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = a.manufacturer_id  and tm.tenant_id = a.tenant_id  where b.user_id=:userId AND a.tenant_id =:tenantId AND m.status = 'ACTIVE' and tm.status='ACTIVE' and (a.type != 'order' or a.type is null or a.type='' ) and"
//            + "(CASE WHEN a.status = 'COMPLETED' THEN (EXTRACT(YEAR FROM a.sent_date) = EXTRACT(YEAR FROM CURRENT_DATE) AND EXTRACT(MONTH FROM a.sent_date) = EXTRACT(MONTH FROM CURRENT_DATE)) ELSE 1=1 END)   And a.assigned_to !=:assignedUser ", nativeQuery = true)
//    List<Ticket> getTicketByUser(String userId, String tenantId, String assignedUser);
    
    @Query(value = "SELECT DISTINCT a.ticket_id, a.created_by, a.created_on, a.modified_by, a.modified_on, a.tenant_id, a.version_no, a.assigned_on, a.assigned_to, a.emailed_by, a.manufacturer, a.manufacturer_id, a.status, a.stockist_id, a.subject, a.type, a.eml, a.sent_date, a.file_path FROM tbl_ticket a LEFT JOIN tbl_manager_manufacturer_mapping b ON a.manufacturer_id = b.manufacturerid LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = a.manufacturer_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = m.manufacturer_id AND tm.tenant_id = a.tenant_id left join tbl_user u on u.user_id =a.assigned_to WHERE a.assigned_to = :userId AND m.status = 'ACTIVE' AND tm.status = 'ACTIVE' AND a.tenant_id = :tenantId AND a.type='order'  AND (a.ticket_id ILIKE %:search% OR a.subject ILIKE %:search% OR a.emailed_by ILIKE %:search% OR a.assigned_on  ILIKE %:search% OR a.type ILIKE %:search% OR a.status ILIKE %:search%)"
            + "", nativeQuery = true)
    public List<Ticket> getByOrderUserTotal(@Param("userId") String userId, 
            @Param("tenantId") String tenantId,String search);


    
    @Query(value = "SELECT DISTINCT a.ticket_id, a.created_by, a.created_on, a.modified_by, a.modified_on, a.tenant_id, a.version_no, a.assigned_on, a.assigned_to, a.emailed_by, a.manufacturer, a.manufacturer_id, a.status, a.stockist_id, a.subject, a.type, a.eml, a.sent_date, a.file_path"
            + " FROM tbl_ticket a LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = a.manufacturer_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = a.manufacturer_id  and tm.tenant_id = a.tenant_id left join tbl_user u on a.assigned_to=u.user_id left join list_value_values v on v.code=a.type where a.assigned_to=:assignedTo and (a.type is null   or a.type !='order' ) and"
            + "(CASE WHEN a.status = 'COMPLETED' THEN (EXTRACT(YEAR FROM a.sent_date) = EXTRACT(YEAR FROM CURRENT_DATE) AND EXTRACT(MONTH FROM a.sent_date) = EXTRACT(MONTH FROM CURRENT_DATE)) ELSE 1=1 END)  AND m.status = 'ACTIVE' and tm.status='ACTIVE' AND  a.status ILIKE %:status% And a.assigned_to =:assignedUser AND a.tenant_id = :tenantId and (a.ticket_id ILIKE %:value%  OR a.emailed_by ILIKE %:value% OR  TO_CHAR(a.sent_date, 'YYYY-MM-DD')  ILIKE %:value%  OR a.status ILIKE %:value% OR a.subject ILIKE %:value% OR v.name ILIKE %:value% OR  CONCAT(u.first_name, u.last_name) ILIKE '%' || :value || '%') ", nativeQuery = true)
    Page<Ticket> getUTicketBySelf(@Param("assignedTo") String assignedTo, String status, Pageable paging, String assignedUser, String tenantId,String value);
    
    @Query(value = "SELECT DISTINCT a.ticket_id, a.created_by, a.created_on, a.modified_by, a.modified_on, a.tenant_id, a.version_no, a.assigned_on, a.assigned_to, a.emailed_by, a.manufacturer, a.manufacturer_id, a.status, a.stockist_id, a.subject, a.type, a.eml, a.sent_date, a.file_path"
            + " FROM tbl_ticket a LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = a.manufacturer_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = m.manufacturer_id  and tm.tenant_id = a.tenant_id left join tbl_user u on a.assigned_to=u.user_id left join list_value_values v on v.code=a.type where a.assigned_to=:assignedTo and (a.type is null   or a.type !='order' ) and"
            + "(CASE WHEN a.status = 'COMPLETED' THEN (EXTRACT(YEAR FROM a.sent_date) = EXTRACT(YEAR FROM CURRENT_DATE) AND EXTRACT(MONTH FROM a.sent_date) = EXTRACT(MONTH FROM CURRENT_DATE)) ELSE 1=1 END)  AND m.status = 'ACTIVE' and tm.status='ACTIVE' AND  a.status ILIKE %:status% And a.assigned_to !=:assignedUser AND a.tenant_id = :tenantId and (a.ticket_id ILIKE %:value% OR  a.emailed_by ILIKE %:value% OR  TO_CHAR(a.sent_date, 'YYYY-MM-DD')  ILIKE %:value%  OR a.status ILIKE %:value% OR a.subject ILIKE %:value% OR  v.name ILIKE %:value% OR CONCAT(u.first_name, u.last_name) ILIKE '%' || :value || '%') ", nativeQuery = true)
    Page<Ticket> getUTicketByUser(@Param("assignedTo") String assignedTo, String status, Pageable paging, String assignedUser,String tenantId,String value);
    

    @Query(value = "SELECT DISTINCT a.ticket_id, a.created_by, a.created_on, a.modified_by, a.modified_on, a.tenant_id, a.version_no, a.assigned_on, a.assigned_to, a.emailed_by, a.manufacturer, a.manufacturer_id, a.status, a.stockist_id, a.subject, a.type, a.eml, a.sent_date, a.file_path"
            + " FROM tbl_ticket a left join  tbl_manager_manufacturer_mapping b on a.manufacturer_id =b.manufacturerid LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = a.manufacturer_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = m.manufacturer_id  where b.user_id=:userId And a.tenant_id =:tenantId AND m.status = 'ACTIVE' and tm.status='ACTIVE' And (a.type = 'order')  And a.status ILIKE %:status% And a.assigned_to=:assignedUser ORDER BY a.created_on DESC", nativeQuery = true)
    public List<Ticket> getOrderByManagerSelf(@Param("userId") String userId, @Param("tenantId") String tenantId,
            @Param("status") String status, Pageable pageable,String assignedUser);

    @Query(value = "SELECT DISTINCT a.ticket_id, a.created_by, a.created_on, a.modified_by, a.modified_on, a.tenant_id, a.version_no, a.assigned_on, a.assigned_to, a.emailed_by, a.manufacturer, a.manufacturer_id, a.status, a.stockist_id, a.subject, a.type, a.eml, a.sent_date, a.file_path"
            + " FROM tbl_ticket a left join  tbl_manager_manufacturer_mapping b on a.manufacturer_id =b.manufacturerid LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = a.manufacturer_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = m.manufacturer_id  where b.user_id=:userId And a.tenant_id =:tenantId AND m.status = 'ACTIVE' and tm.status='ACTIVE' And (a.type = 'order')  And a.status ILIKE %:status% And a.assigned_to=:assignedUser ORDER BY a.created_on DESC", nativeQuery = true)
    List<Ticket> getOrderByManagerSelf(String userId, String tenantId, String status, String assignedUser);

    
    @Query(value = "SELECT DISTINCT a.ticket_id, a.created_by, a.created_on, a.modified_by, a.modified_on, a.tenant_id, a.version_no, a.assigned_on, a.assigned_to, a.emailed_by, a.manufacturer, a.manufacturer_id, a.status, a.stockist_id, a.subject, a.type, a.eml, a.sent_date, a.file_path"
            + " FROM tbl_ticket a left join  tbl_manager_manufacturer_mapping b on a.manufacturer_id =b.manufacturerid LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = a.manufacturer_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = m.manufacturer_id  where b.user_id=:userId And a.tenant_id =:tenantId AND m.status = 'ACTIVE' and tm.status='ACTIVE' And (a.type = 'order')  And a.status ILIKE %:status% And a.assigned_to!=:assignedUser ORDER BY a.created_on DESC", nativeQuery = true)
    List<Ticket> getOrderByMangerOthers(String userId, String tenantId, String status, Pageable paging,
            String assignedUser);

    @Query(value = "SELECT DISTINCT a.ticket_id, a.created_by, a.created_on, a.modified_by, a.modified_on, a.tenant_id, a.version_no, a.assigned_on, a.assigned_to, a.emailed_by, a.manufacturer, a.manufacturer_id, a.status, a.stockist_id, a.subject, a.type, a.eml, a.sent_date, a.file_path"
            + " FROM tbl_ticket a left join  tbl_manager_manufacturer_mapping b on a.manufacturer_id =b.manufacturerid LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = a.manufacturer_id LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = m.manufacturer_id  where b.user_id=:userId And a.tenant_id =:tenantId AND m.status = 'ACTIVE' and tm.status='ACTIVE' And (a.type = 'order')  And a.status ILIKE %:status% And a.assigned_to!=:assignedUser ORDER BY a.created_on DESC", nativeQuery = true)
    List<Ticket> getOrderByMangerOthers(String userId, String tenantId, String status, String assignedUser);
    
    
    @Query(value = "SELECT DISTINCT a.ticket_id, a.created_by, a.created_on, a.modified_by, a.modified_on, a.tenant_id, a.version_no, a.assigned_on, a.assigned_to, a.emailed_by, a.manufacturer, a.manufacturer_id, a.status, a.stockist_id, a.subject, a.type, a.eml, a.sent_date, a.file_path"
            + " FROM tbl_ticket_order_invoice i LEFT JOIN tbl_ticket a  ON i.ticket_id= a.ticket_id   left join  tbl_manager_manufacturer_mapping b on a.manufacturer_id =b.manufacturerid  LEFT JOIN tbl_tenant_manufacture tm ON tm.manufacturer_id = a.manufacturer_id And tm.tenant_id =:tenantId LEFT JOIN tbl_manufacturer m ON m.manufacturer_id = a.manufacturer_id  where b.user_id=:userId And i.status ILIKE %:status% And a.tenant_id =:tenantId AND m.status = 'ACTIVE' and tm.status='ACTIVE' And (a.type = 'order') AND (CASE WHEN i.status = 'DELIVERED' THEN (EXTRACT(YEAR FROM TO_DATE(a.assigned_on,'yyyy-mm-dd')) = EXTRACT(YEAR FROM CURRENT_DATE) AND EXTRACT(MONTH FROM i.created_on) = EXTRACT(MONTH FROM CURRENT_DATE)) ELSE 1=1 END)", nativeQuery = true)
    public List<Ticket> getByOrderInvoiceManager(@Param("userId") String userId, @Param("status") String status,
            @Param("tenantId") String tenantId);
    
    @Query(value = "SELECT l.name, COUNT(t.type) AS totcount FROM tbl_list_value v LEFT JOIN list_value_values l ON l.list_value_key = v.key LEFT JOIN tbl_ticket t ON t.type = l.code WHERE v.key = '100' AND t.tenant_id = :tenantId AND l.code NOT IN ('order') and EXTRACT(MONTH FROM To_DATE (t.assigned_on,'yyyy-mm-dd')) =:month and t.manufacturer_id ILIKE %:manId  GROUP BY l.name", nativeQuery = true)
    List<Object[]> ticketCategory(@Param("tenantId") String tenantId,@Param("manId")String manId ,@Param("month") int month);
    
    @Query(value ="SELECT SUBSTRING(ticket_id FROM 15) AS ticketId from tbl_ticket where manufacturer_id =:manufacturerId AND  EXTRACT(YEAR FROM TO_DATE(SUBSTRING(ticket_id FROM 7 FOR 8), 'YYYYMMDD')) = EXTRACT(YEAR FROM CURRENT_DATE)  AND EXTRACT(MONTH FROM TO_DATE(SUBSTRING(ticket_id FROM 7 FOR 8), 'YYYYMMDD')) = EXTRACT(MONTH FROM CURRENT_DATE)  AND EXTRACT(DAY FROM TO_DATE(SUBSTRING(ticket_id FROM 7 FOR 8), 'YYYYMMDD')) = EXTRACT(DAY FROM CURRENT_DATE) ORDER BY CAST(SUBSTRING(ticket_id FROM 15) AS INT) DESC LIMIT 1",nativeQuery = true)
   	public String getLastSequenceByManufacturer(String manufacturerId);
    
    @Query(value = "select * from tbl_ticket where sent_date=:sentDate and subject=:subject AND emailed_by=:emailedBy AND tenant_id =:tenantId AND manufacturer_id=:manufacturerId LIMIT 1", nativeQuery = true)
  	Optional<Ticket> getBymailId(@Param("sentDate") Date sentDate,@Param("subject") String subject,@Param("emailedBy") String emailedBy,@Param("tenantId") String tenantId,@Param("manufacturerId") String manufacturerId);
        
}
